// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offlinemessage.proto

#include "offlinemessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace OfflineMessageProto {
constexpr ResultCode::ResultCode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errmsg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , errcode_(0){}
struct ResultCodeDefaultTypeInternal {
  constexpr ResultCodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResultCodeDefaultTypeInternal() {}
  union {
    ResultCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResultCodeDefaultTypeInternal _ResultCode_default_instance_;
constexpr msg::msg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recvname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sendname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msgid_(0){}
struct msgDefaultTypeInternal {
  constexpr msgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~msgDefaultTypeInternal() {}
  union {
    msg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT msgDefaultTypeInternal _msg_default_instance_;
constexpr addOfflineMsgRequest::addOfflineMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinemsg_(nullptr){}
struct addOfflineMsgRequestDefaultTypeInternal {
  constexpr addOfflineMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addOfflineMsgRequestDefaultTypeInternal() {}
  union {
    addOfflineMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addOfflineMsgRequestDefaultTypeInternal _addOfflineMsgRequest_default_instance_;
constexpr addOfflineMsgResponse::addOfflineMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(nullptr)
  , success_(false){}
struct addOfflineMsgResponseDefaultTypeInternal {
  constexpr addOfflineMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addOfflineMsgResponseDefaultTypeInternal() {}
  union {
    addOfflineMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addOfflineMsgResponseDefaultTypeInternal _addOfflineMsgResponse_default_instance_;
constexpr delOfflineMsgRequest::delOfflineMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinemsg_(nullptr){}
struct delOfflineMsgRequestDefaultTypeInternal {
  constexpr delOfflineMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~delOfflineMsgRequestDefaultTypeInternal() {}
  union {
    delOfflineMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT delOfflineMsgRequestDefaultTypeInternal _delOfflineMsgRequest_default_instance_;
constexpr delOfflineMsgResponse::delOfflineMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(nullptr)
  , success_(false){}
struct delOfflineMsgResponseDefaultTypeInternal {
  constexpr delOfflineMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~delOfflineMsgResponseDefaultTypeInternal() {}
  union {
    delOfflineMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT delOfflineMsgResponseDefaultTypeInternal _delOfflineMsgResponse_default_instance_;
constexpr queryOfflineMsgRequest::queryOfflineMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recvname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct queryOfflineMsgRequestDefaultTypeInternal {
  constexpr queryOfflineMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~queryOfflineMsgRequestDefaultTypeInternal() {}
  union {
    queryOfflineMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT queryOfflineMsgRequestDefaultTypeInternal _queryOfflineMsgRequest_default_instance_;
constexpr queryOfflineMsgResponse::queryOfflineMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinemsg_()
  , result_(nullptr)
  , success_(false){}
struct queryOfflineMsgResponseDefaultTypeInternal {
  constexpr queryOfflineMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~queryOfflineMsgResponseDefaultTypeInternal() {}
  union {
    queryOfflineMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT queryOfflineMsgResponseDefaultTypeInternal _queryOfflineMsgResponse_default_instance_;
constexpr groupMsg::groupMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groupname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sendname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msgid_(0){}
struct groupMsgDefaultTypeInternal {
  constexpr groupMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~groupMsgDefaultTypeInternal() {}
  union {
    groupMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT groupMsgDefaultTypeInternal _groupMsg_default_instance_;
constexpr addOfflineGroupMsgRequest::addOfflineGroupMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinegroupmsg_(nullptr){}
struct addOfflineGroupMsgRequestDefaultTypeInternal {
  constexpr addOfflineGroupMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addOfflineGroupMsgRequestDefaultTypeInternal() {}
  union {
    addOfflineGroupMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addOfflineGroupMsgRequestDefaultTypeInternal _addOfflineGroupMsgRequest_default_instance_;
constexpr addOfflineGroupMsgResponse::addOfflineGroupMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(nullptr)
  , success_(false){}
struct addOfflineGroupMsgResponseDefaultTypeInternal {
  constexpr addOfflineGroupMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addOfflineGroupMsgResponseDefaultTypeInternal() {}
  union {
    addOfflineGroupMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addOfflineGroupMsgResponseDefaultTypeInternal _addOfflineGroupMsgResponse_default_instance_;
constexpr delOfflineGroupMsgRequest::delOfflineGroupMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinegroupmsg_(nullptr){}
struct delOfflineGroupMsgRequestDefaultTypeInternal {
  constexpr delOfflineGroupMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~delOfflineGroupMsgRequestDefaultTypeInternal() {}
  union {
    delOfflineGroupMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT delOfflineGroupMsgRequestDefaultTypeInternal _delOfflineGroupMsgRequest_default_instance_;
constexpr delOfflineGroupMsgResponse::delOfflineGroupMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(nullptr)
  , success_(false){}
struct delOfflineGroupMsgResponseDefaultTypeInternal {
  constexpr delOfflineGroupMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~delOfflineGroupMsgResponseDefaultTypeInternal() {}
  union {
    delOfflineGroupMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT delOfflineGroupMsgResponseDefaultTypeInternal _delOfflineGroupMsgResponse_default_instance_;
constexpr queryOfflineGroupMsgRequest::queryOfflineGroupMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct queryOfflineGroupMsgRequestDefaultTypeInternal {
  constexpr queryOfflineGroupMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~queryOfflineGroupMsgRequestDefaultTypeInternal() {}
  union {
    queryOfflineGroupMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT queryOfflineGroupMsgRequestDefaultTypeInternal _queryOfflineGroupMsgRequest_default_instance_;
constexpr queryOfflineGroupMsgResponse::queryOfflineGroupMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinegroupmsg_()
  , result_(nullptr)
  , success_(false){}
struct queryOfflineGroupMsgResponseDefaultTypeInternal {
  constexpr queryOfflineGroupMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~queryOfflineGroupMsgResponseDefaultTypeInternal() {}
  union {
    queryOfflineGroupMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT queryOfflineGroupMsgResponseDefaultTypeInternal _queryOfflineGroupMsgResponse_default_instance_;
constexpr departMsg::departMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : departname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sendname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msgid_(0){}
struct departMsgDefaultTypeInternal {
  constexpr departMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~departMsgDefaultTypeInternal() {}
  union {
    departMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT departMsgDefaultTypeInternal _departMsg_default_instance_;
constexpr addOfflineDepartMsgRequest::addOfflineDepartMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinedepartmsg_(nullptr){}
struct addOfflineDepartMsgRequestDefaultTypeInternal {
  constexpr addOfflineDepartMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addOfflineDepartMsgRequestDefaultTypeInternal() {}
  union {
    addOfflineDepartMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addOfflineDepartMsgRequestDefaultTypeInternal _addOfflineDepartMsgRequest_default_instance_;
constexpr addOfflineDepartMsgResponse::addOfflineDepartMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(nullptr)
  , success_(false){}
struct addOfflineDepartMsgResponseDefaultTypeInternal {
  constexpr addOfflineDepartMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addOfflineDepartMsgResponseDefaultTypeInternal() {}
  union {
    addOfflineDepartMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addOfflineDepartMsgResponseDefaultTypeInternal _addOfflineDepartMsgResponse_default_instance_;
constexpr delOfflineDepartMsgRequest::delOfflineDepartMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinedepartmsg_(nullptr){}
struct delOfflineDepartMsgRequestDefaultTypeInternal {
  constexpr delOfflineDepartMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~delOfflineDepartMsgRequestDefaultTypeInternal() {}
  union {
    delOfflineDepartMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT delOfflineDepartMsgRequestDefaultTypeInternal _delOfflineDepartMsgRequest_default_instance_;
constexpr delOfflineDepartMsgResponse::delOfflineDepartMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(nullptr)
  , success_(false){}
struct delOfflineDepartMsgResponseDefaultTypeInternal {
  constexpr delOfflineDepartMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~delOfflineDepartMsgResponseDefaultTypeInternal() {}
  union {
    delOfflineDepartMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT delOfflineDepartMsgResponseDefaultTypeInternal _delOfflineDepartMsgResponse_default_instance_;
constexpr queryOfflineDepartMsgRequest::queryOfflineDepartMsgRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct queryOfflineDepartMsgRequestDefaultTypeInternal {
  constexpr queryOfflineDepartMsgRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~queryOfflineDepartMsgRequestDefaultTypeInternal() {}
  union {
    queryOfflineDepartMsgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT queryOfflineDepartMsgRequestDefaultTypeInternal _queryOfflineDepartMsgRequest_default_instance_;
constexpr queryOfflineDepartMsgResponse::queryOfflineDepartMsgResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinedepartmsg_()
  , result_(nullptr)
  , success_(false){}
struct queryOfflineDepartMsgResponseDefaultTypeInternal {
  constexpr queryOfflineDepartMsgResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~queryOfflineDepartMsgResponseDefaultTypeInternal() {}
  union {
    queryOfflineDepartMsgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT queryOfflineDepartMsgResponseDefaultTypeInternal _queryOfflineDepartMsgResponse_default_instance_;
}  // namespace OfflineMessageProto
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_offlinemessage_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_offlinemessage_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_offlinemessage_2eproto[1];

const uint32_t TableStruct_offlinemessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::ResultCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::ResultCode, errcode_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::ResultCode, errmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, msgid_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, recvname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, sendname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgRequest, offlinemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgRequest, offlinemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgRequest, recvname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, offlinemsg_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, msgid_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, groupname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, sendname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgRequest, offlinegroupmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgRequest, offlinegroupmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, offlinegroupmsg_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, msgid_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, departname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, sendname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgRequest, offlinedepartmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgRequest, offlinedepartmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, offlinedepartmsg_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, success_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::OfflineMessageProto::ResultCode)},
  { 8, -1, -1, sizeof(::OfflineMessageProto::msg)},
  { 18, -1, -1, sizeof(::OfflineMessageProto::addOfflineMsgRequest)},
  { 25, -1, -1, sizeof(::OfflineMessageProto::addOfflineMsgResponse)},
  { 33, -1, -1, sizeof(::OfflineMessageProto::delOfflineMsgRequest)},
  { 40, -1, -1, sizeof(::OfflineMessageProto::delOfflineMsgResponse)},
  { 48, -1, -1, sizeof(::OfflineMessageProto::queryOfflineMsgRequest)},
  { 55, -1, -1, sizeof(::OfflineMessageProto::queryOfflineMsgResponse)},
  { 64, -1, -1, sizeof(::OfflineMessageProto::groupMsg)},
  { 74, -1, -1, sizeof(::OfflineMessageProto::addOfflineGroupMsgRequest)},
  { 81, -1, -1, sizeof(::OfflineMessageProto::addOfflineGroupMsgResponse)},
  { 89, -1, -1, sizeof(::OfflineMessageProto::delOfflineGroupMsgRequest)},
  { 96, -1, -1, sizeof(::OfflineMessageProto::delOfflineGroupMsgResponse)},
  { 104, -1, -1, sizeof(::OfflineMessageProto::queryOfflineGroupMsgRequest)},
  { 111, -1, -1, sizeof(::OfflineMessageProto::queryOfflineGroupMsgResponse)},
  { 120, -1, -1, sizeof(::OfflineMessageProto::departMsg)},
  { 130, -1, -1, sizeof(::OfflineMessageProto::addOfflineDepartMsgRequest)},
  { 137, -1, -1, sizeof(::OfflineMessageProto::addOfflineDepartMsgResponse)},
  { 145, -1, -1, sizeof(::OfflineMessageProto::delOfflineDepartMsgRequest)},
  { 152, -1, -1, sizeof(::OfflineMessageProto::delOfflineDepartMsgResponse)},
  { 160, -1, -1, sizeof(::OfflineMessageProto::queryOfflineDepartMsgRequest)},
  { 167, -1, -1, sizeof(::OfflineMessageProto::queryOfflineDepartMsgResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_ResultCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_msg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_groupMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineGroupMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineGroupMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineGroupMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineGroupMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineGroupMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineGroupMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_departMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineDepartMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineDepartMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineDepartMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineDepartMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineDepartMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineDepartMsgResponse_default_instance_),
};

const char descriptor_table_protodef_offlinemessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024offlinemessage.proto\022\023OfflineMessagePr"
  "oto\"-\n\nResultCode\022\017\n\007errcode\030\001 \001(\005\022\016\n\006er"
  "rmsg\030\002 \001(\014\"I\n\003msg\022\r\n\005msgid\030\001 \001(\005\022\020\n\010recv"
  "name\030\002 \001(\014\022\020\n\010sendname\030\003 \001(\014\022\017\n\007message\030"
  "\004 \001(\014\"D\n\024addOfflineMsgRequest\022,\n\nOffline"
  "Msg\030\001 \001(\0132\030.OfflineMessageProto.msg\"Y\n\025a"
  "ddOfflineMsgResponse\022/\n\006result\030\001 \001(\0132\037.O"
  "fflineMessageProto.ResultCode\022\017\n\007success"
  "\030\002 \001(\010\"D\n\024delOfflineMsgRequest\022,\n\nOfflin"
  "eMsg\030\001 \001(\0132\030.OfflineMessageProto.msg\"Y\n\025"
  "delOfflineMsgResponse\022/\n\006result\030\001 \001(\0132\037."
  "OfflineMessageProto.ResultCode\022\017\n\007succes"
  "s\030\002 \001(\010\"*\n\026queryOfflineMsgRequest\022\020\n\010rec"
  "vname\030\001 \001(\014\"\211\001\n\027queryOfflineMsgResponse\022"
  ",\n\nOfflineMsg\030\001 \003(\0132\030.OfflineMessageProt"
  "o.msg\022/\n\006result\030\002 \001(\0132\037.OfflineMessagePr"
  "oto.ResultCode\022\017\n\007success\030\003 \001(\010\"O\n\010group"
  "Msg\022\r\n\005msgid\030\001 \001(\005\022\021\n\tgroupname\030\002 \001(\014\022\020\n"
  "\010sendname\030\003 \001(\014\022\017\n\007message\030\004 \001(\014\"S\n\031addO"
  "fflineGroupMsgRequest\0226\n\017OfflineGroupMsg"
  "\030\001 \001(\0132\035.OfflineMessageProto.groupMsg\"^\n"
  "\032addOfflineGroupMsgResponse\022/\n\006result\030\001 "
  "\001(\0132\037.OfflineMessageProto.ResultCode\022\017\n\007"
  "success\030\002 \001(\010\"S\n\031delOfflineGroupMsgReque"
  "st\0226\n\017OfflineGroupMsg\030\001 \001(\0132\035.OfflineMes"
  "sageProto.groupMsg\"^\n\032delOfflineGroupMsg"
  "Response\022/\n\006result\030\001 \001(\0132\037.OfflineMessag"
  "eProto.ResultCode\022\017\n\007success\030\002 \001(\010\"/\n\033qu"
  "eryOfflineGroupMsgRequest\022\020\n\010username\030\001 "
  "\001(\014\"\230\001\n\034queryOfflineGroupMsgResponse\0226\n\017"
  "OfflineGroupMsg\030\001 \003(\0132\035.OfflineMessagePr"
  "oto.groupMsg\022/\n\006result\030\002 \001(\0132\037.OfflineMe"
  "ssageProto.ResultCode\022\017\n\007success\030\003 \001(\010\"Q"
  "\n\tdepartMsg\022\r\n\005msgid\030\001 \001(\005\022\022\n\ndepartname"
  "\030\002 \001(\014\022\020\n\010sendname\030\003 \001(\014\022\017\n\007message\030\004 \001("
  "\014\"V\n\032addOfflineDepartMsgRequest\0228\n\020Offli"
  "neDepartMsg\030\001 \001(\0132\036.OfflineMessageProto."
  "departMsg\"_\n\033addOfflineDepartMsgResponse"
  "\022/\n\006result\030\001 \001(\0132\037.OfflineMessageProto.R"
  "esultCode\022\017\n\007success\030\002 \001(\010\"V\n\032delOffline"
  "DepartMsgRequest\0228\n\020OfflineDepartMsg\030\001 \001"
  "(\0132\036.OfflineMessageProto.departMsg\"_\n\033de"
  "lOfflineDepartMsgResponse\022/\n\006result\030\001 \001("
  "\0132\037.OfflineMessageProto.ResultCode\022\017\n\007su"
  "ccess\030\002 \001(\010\"0\n\034queryOfflineDepartMsgRequ"
  "est\022\020\n\010username\030\001 \001(\014\"\233\001\n\035queryOfflineDe"
  "partMsgResponse\0228\n\020OfflineDepartMsg\030\001 \003("
  "\0132\036.OfflineMessageProto.departMsg\022/\n\006res"
  "ult\030\002 \001(\0132\037.OfflineMessageProto.ResultCo"
  "de\022\017\n\007success\030\003 \001(\0102\254\010\n\rofflineMsgRpc\022f\n"
  "\rAddOfflineMsg\022).OfflineMessageProto.add"
  "OfflineMsgRequest\032*.OfflineMessageProto."
  "addOfflineMsgResponse\022f\n\rDelOfflineMsg\022)"
  ".OfflineMessageProto.delOfflineMsgReques"
  "t\032*.OfflineMessageProto.delOfflineMsgRes"
  "ponse\022l\n\017QueryOfflineMsg\022+.OfflineMessag"
  "eProto.queryOfflineMsgRequest\032,.OfflineM"
  "essageProto.queryOfflineMsgResponse\022u\n\022A"
  "ddOfflineGroupMsg\022..OfflineMessageProto."
  "addOfflineGroupMsgRequest\032/.OfflineMessa"
  "geProto.addOfflineGroupMsgResponse\022u\n\022De"
  "lOfflineGroupMsg\022..OfflineMessageProto.d"
  "elOfflineGroupMsgRequest\032/.OfflineMessag"
  "eProto.delOfflineGroupMsgResponse\022{\n\024Que"
  "ryOfflineGroupMsg\0220.OfflineMessageProto."
  "queryOfflineGroupMsgRequest\0321.OfflineMes"
  "sageProto.queryOfflineGroupMsgResponse\022x"
  "\n\023AddOfflineDepartMsg\022/.OfflineMessagePr"
  "oto.addOfflineDepartMsgRequest\0320.Offline"
  "MessageProto.addOfflineDepartMsgResponse"
  "\022x\n\023DelOfflineDepartMsg\022/.OfflineMessage"
  "Proto.delOfflineDepartMsgRequest\0320.Offli"
  "neMessageProto.delOfflineDepartMsgRespon"
  "se\022~\n\025QueryOfflineDepartMsg\0221.OfflineMes"
  "sageProto.queryOfflineDepartMsgRequest\0322"
  ".OfflineMessageProto.queryOfflineDepartM"
  "sgResponseB\003\200\001\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_offlinemessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_offlinemessage_2eproto = {
  false, false, 3063, descriptor_table_protodef_offlinemessage_2eproto, "offlinemessage.proto", 
  &descriptor_table_offlinemessage_2eproto_once, nullptr, 0, 22,
  schemas, file_default_instances, TableStruct_offlinemessage_2eproto::offsets,
  file_level_metadata_offlinemessage_2eproto, file_level_enum_descriptors_offlinemessage_2eproto, file_level_service_descriptors_offlinemessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_offlinemessage_2eproto_getter() {
  return &descriptor_table_offlinemessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_offlinemessage_2eproto(&descriptor_table_offlinemessage_2eproto);
namespace OfflineMessageProto {

// ===================================================================

class ResultCode::_Internal {
 public:
};

ResultCode::ResultCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.ResultCode)
}
ResultCode::ResultCode(const ResultCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    errmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    errmsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errmsg(), 
      GetArenaForAllocation());
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.ResultCode)
}

inline void ResultCode::SharedCtor() {
errmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  errmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
errcode_ = 0;
}

ResultCode::~ResultCode() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.ResultCode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResultCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  errmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResultCode::ArenaDtor(void* object) {
  ResultCode* _this = reinterpret_cast< ResultCode* >(object);
  (void)_this;
}
void ResultCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResultCode::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.ResultCode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmpty();
  errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes errmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResultCode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.ResultCode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_errcode(), target);
  }

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_errmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.ResultCode)
  return target;
}

size_t ResultCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.ResultCode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errmsg());
  }

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResultCode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResultCode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResultCode::GetClassData() const { return &_class_data_; }

void ResultCode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResultCode *>(to)->MergeFrom(
      static_cast<const ResultCode &>(from));
}


void ResultCode::MergeFrom(const ResultCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.ResultCode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errmsg().empty()) {
    _internal_set_errmsg(from._internal_errmsg());
  }
  if (from._internal_errcode() != 0) {
    _internal_set_errcode(from._internal_errcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResultCode::CopyFrom(const ResultCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.ResultCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultCode::IsInitialized() const {
  return true;
}

void ResultCode::InternalSwap(ResultCode* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &errmsg_, lhs_arena,
      &other->errmsg_, rhs_arena
  );
  swap(errcode_, other->errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultCode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[0]);
}

// ===================================================================

class msg::_Internal {
 public:
};

msg::msg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.msg)
}
msg::msg(const msg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recvname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_recvname().empty()) {
    recvname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recvname(), 
      GetArenaForAllocation());
  }
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sendname().empty()) {
    sendname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sendname(), 
      GetArenaForAllocation());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.msg)
}

inline void msg::SharedCtor() {
recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recvname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msgid_ = 0;
}

msg::~msg() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.msg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void msg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  recvname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void msg::ArenaDtor(void* object) {
  msg* _this = reinterpret_cast< msg* >(object);
  (void)_this;
}
void msg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void msg::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.msg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvname_.ClearToEmpty();
  sendname_.ClearToEmpty();
  message_.ClearToEmpty();
  msgid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* msg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 msgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes recvname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_recvname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes sendname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* msg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.msg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgid = 1;
  if (this->_internal_msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgid(), target);
  }

  // bytes recvname = 2;
  if (!this->_internal_recvname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_recvname(), target);
  }

  // bytes sendname = 3;
  if (!this->_internal_sendname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sendname(), target);
  }

  // bytes message = 4;
  if (!this->_internal_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.msg)
  return target;
}

size_t msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.msg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes recvname = 2;
  if (!this->_internal_recvname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_recvname());
  }

  // bytes sendname = 3;
  if (!this->_internal_sendname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sendname());
  }

  // bytes message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 msgid = 1;
  if (this->_internal_msgid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData msg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    msg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*msg::GetClassData() const { return &_class_data_; }

void msg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<msg *>(to)->MergeFrom(
      static_cast<const msg &>(from));
}


void msg::MergeFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.msg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_recvname().empty()) {
    _internal_set_recvname(from._internal_recvname());
  }
  if (!from._internal_sendname().empty()) {
    _internal_set_sendname(from._internal_sendname());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_msgid() != 0) {
    _internal_set_msgid(from._internal_msgid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void msg::CopyFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg::IsInitialized() const {
  return true;
}

void msg::InternalSwap(msg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recvname_, lhs_arena,
      &other->recvname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sendname_, lhs_arena,
      &other->sendname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(msgid_, other->msgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata msg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[1]);
}

// ===================================================================

class addOfflineMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::msg& offlinemsg(const addOfflineMsgRequest* msg);
};

const ::OfflineMessageProto::msg&
addOfflineMsgRequest::_Internal::offlinemsg(const addOfflineMsgRequest* msg) {
  return *msg->offlinemsg_;
}
addOfflineMsgRequest::addOfflineMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.addOfflineMsgRequest)
}
addOfflineMsgRequest::addOfflineMsgRequest(const addOfflineMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offlinemsg()) {
    offlinemsg_ = new ::OfflineMessageProto::msg(*from.offlinemsg_);
  } else {
    offlinemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineMsgRequest)
}

inline void addOfflineMsgRequest::SharedCtor() {
offlinemsg_ = nullptr;
}

addOfflineMsgRequest::~addOfflineMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addOfflineMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete offlinemsg_;
}

void addOfflineMsgRequest::ArenaDtor(void* object) {
  addOfflineMsgRequest* _this = reinterpret_cast< addOfflineMsgRequest* >(object);
  (void)_this;
}
void addOfflineMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addOfflineMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addOfflineMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && offlinemsg_ != nullptr) {
    delete offlinemsg_;
  }
  offlinemsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addOfflineMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.msg OfflineMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinemsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addOfflineMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->_internal_has_offlinemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineMsgRequest)
  return target;
}

size_t addOfflineMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->_internal_has_offlinemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinemsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addOfflineMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addOfflineMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addOfflineMsgRequest::GetClassData() const { return &_class_data_; }

void addOfflineMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addOfflineMsgRequest *>(to)->MergeFrom(
      static_cast<const addOfflineMsgRequest &>(from));
}


void addOfflineMsgRequest::MergeFrom(const addOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offlinemsg()) {
    _internal_mutable_offlinemsg()->::OfflineMessageProto::msg::MergeFrom(from._internal_offlinemsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addOfflineMsgRequest::CopyFrom(const addOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineMsgRequest::IsInitialized() const {
  return true;
}

void addOfflineMsgRequest::InternalSwap(addOfflineMsgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offlinemsg_, other->offlinemsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[2]);
}

// ===================================================================

class addOfflineMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const addOfflineMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
addOfflineMsgResponse::_Internal::result(const addOfflineMsgResponse* msg) {
  return *msg->result_;
}
addOfflineMsgResponse::addOfflineMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.addOfflineMsgResponse)
}
addOfflineMsgResponse::addOfflineMsgResponse(const addOfflineMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineMsgResponse)
}

inline void addOfflineMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

addOfflineMsgResponse::~addOfflineMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addOfflineMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void addOfflineMsgResponse::ArenaDtor(void* object) {
  addOfflineMsgResponse* _this = reinterpret_cast< addOfflineMsgResponse* >(object);
  (void)_this;
}
void addOfflineMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addOfflineMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addOfflineMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addOfflineMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addOfflineMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineMsgResponse)
  return target;
}

size_t addOfflineMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addOfflineMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addOfflineMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addOfflineMsgResponse::GetClassData() const { return &_class_data_; }

void addOfflineMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addOfflineMsgResponse *>(to)->MergeFrom(
      static_cast<const addOfflineMsgResponse &>(from));
}


void addOfflineMsgResponse::MergeFrom(const addOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addOfflineMsgResponse::CopyFrom(const addOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineMsgResponse::IsInitialized() const {
  return true;
}

void addOfflineMsgResponse::InternalSwap(addOfflineMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(addOfflineMsgResponse, success_)
      + sizeof(addOfflineMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(addOfflineMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[3]);
}

// ===================================================================

class delOfflineMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::msg& offlinemsg(const delOfflineMsgRequest* msg);
};

const ::OfflineMessageProto::msg&
delOfflineMsgRequest::_Internal::offlinemsg(const delOfflineMsgRequest* msg) {
  return *msg->offlinemsg_;
}
delOfflineMsgRequest::delOfflineMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.delOfflineMsgRequest)
}
delOfflineMsgRequest::delOfflineMsgRequest(const delOfflineMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offlinemsg()) {
    offlinemsg_ = new ::OfflineMessageProto::msg(*from.offlinemsg_);
  } else {
    offlinemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineMsgRequest)
}

inline void delOfflineMsgRequest::SharedCtor() {
offlinemsg_ = nullptr;
}

delOfflineMsgRequest::~delOfflineMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void delOfflineMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete offlinemsg_;
}

void delOfflineMsgRequest::ArenaDtor(void* object) {
  delOfflineMsgRequest* _this = reinterpret_cast< delOfflineMsgRequest* >(object);
  (void)_this;
}
void delOfflineMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delOfflineMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void delOfflineMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && offlinemsg_ != nullptr) {
    delete offlinemsg_;
  }
  offlinemsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delOfflineMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.msg OfflineMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinemsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* delOfflineMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->_internal_has_offlinemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineMsgRequest)
  return target;
}

size_t delOfflineMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->_internal_has_offlinemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinemsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData delOfflineMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    delOfflineMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*delOfflineMsgRequest::GetClassData() const { return &_class_data_; }

void delOfflineMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<delOfflineMsgRequest *>(to)->MergeFrom(
      static_cast<const delOfflineMsgRequest &>(from));
}


void delOfflineMsgRequest::MergeFrom(const delOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offlinemsg()) {
    _internal_mutable_offlinemsg()->::OfflineMessageProto::msg::MergeFrom(from._internal_offlinemsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void delOfflineMsgRequest::CopyFrom(const delOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineMsgRequest::IsInitialized() const {
  return true;
}

void delOfflineMsgRequest::InternalSwap(delOfflineMsgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offlinemsg_, other->offlinemsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[4]);
}

// ===================================================================

class delOfflineMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const delOfflineMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
delOfflineMsgResponse::_Internal::result(const delOfflineMsgResponse* msg) {
  return *msg->result_;
}
delOfflineMsgResponse::delOfflineMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.delOfflineMsgResponse)
}
delOfflineMsgResponse::delOfflineMsgResponse(const delOfflineMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineMsgResponse)
}

inline void delOfflineMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

delOfflineMsgResponse::~delOfflineMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void delOfflineMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void delOfflineMsgResponse::ArenaDtor(void* object) {
  delOfflineMsgResponse* _this = reinterpret_cast< delOfflineMsgResponse* >(object);
  (void)_this;
}
void delOfflineMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delOfflineMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void delOfflineMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delOfflineMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* delOfflineMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineMsgResponse)
  return target;
}

size_t delOfflineMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData delOfflineMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    delOfflineMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*delOfflineMsgResponse::GetClassData() const { return &_class_data_; }

void delOfflineMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<delOfflineMsgResponse *>(to)->MergeFrom(
      static_cast<const delOfflineMsgResponse &>(from));
}


void delOfflineMsgResponse::MergeFrom(const delOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void delOfflineMsgResponse::CopyFrom(const delOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineMsgResponse::IsInitialized() const {
  return true;
}

void delOfflineMsgResponse::InternalSwap(delOfflineMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(delOfflineMsgResponse, success_)
      + sizeof(delOfflineMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(delOfflineMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[5]);
}

// ===================================================================

class queryOfflineMsgRequest::_Internal {
 public:
};

queryOfflineMsgRequest::queryOfflineMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.queryOfflineMsgRequest)
}
queryOfflineMsgRequest::queryOfflineMsgRequest(const queryOfflineMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recvname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_recvname().empty()) {
    recvname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recvname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineMsgRequest)
}

inline void queryOfflineMsgRequest::SharedCtor() {
recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recvname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

queryOfflineMsgRequest::~queryOfflineMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void queryOfflineMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  recvname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void queryOfflineMsgRequest::ArenaDtor(void* object) {
  queryOfflineMsgRequest* _this = reinterpret_cast< queryOfflineMsgRequest* >(object);
  (void)_this;
}
void queryOfflineMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void queryOfflineMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void queryOfflineMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryOfflineMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes recvname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_recvname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryOfflineMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes recvname = 1;
  if (!this->_internal_recvname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_recvname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineMsgRequest)
  return target;
}

size_t queryOfflineMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes recvname = 1;
  if (!this->_internal_recvname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_recvname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryOfflineMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    queryOfflineMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryOfflineMsgRequest::GetClassData() const { return &_class_data_; }

void queryOfflineMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<queryOfflineMsgRequest *>(to)->MergeFrom(
      static_cast<const queryOfflineMsgRequest &>(from));
}


void queryOfflineMsgRequest::MergeFrom(const queryOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_recvname().empty()) {
    _internal_set_recvname(from._internal_recvname());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryOfflineMsgRequest::CopyFrom(const queryOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineMsgRequest::IsInitialized() const {
  return true;
}

void queryOfflineMsgRequest::InternalSwap(queryOfflineMsgRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recvname_, lhs_arena,
      &other->recvname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[6]);
}

// ===================================================================

class queryOfflineMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const queryOfflineMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
queryOfflineMsgResponse::_Internal::result(const queryOfflineMsgResponse* msg) {
  return *msg->result_;
}
queryOfflineMsgResponse::queryOfflineMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  offlinemsg_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.queryOfflineMsgResponse)
}
queryOfflineMsgResponse::queryOfflineMsgResponse(const queryOfflineMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      offlinemsg_(from.offlinemsg_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineMsgResponse)
}

inline void queryOfflineMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

queryOfflineMsgResponse::~queryOfflineMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void queryOfflineMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void queryOfflineMsgResponse::ArenaDtor(void* object) {
  queryOfflineMsgResponse* _this = reinterpret_cast< queryOfflineMsgResponse* >(object);
  (void)_this;
}
void queryOfflineMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void queryOfflineMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void queryOfflineMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinemsg_.Clear();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryOfflineMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .OfflineMessageProto.msg OfflineMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_offlinemsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .OfflineMessageProto.ResultCode result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryOfflineMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.msg OfflineMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_offlinemsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_offlinemsg(i), target, stream);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineMsgResponse)
  return target;
}

size_t queryOfflineMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.msg OfflineMsg = 1;
  total_size += 1UL * this->_internal_offlinemsg_size();
  for (const auto& msg : this->offlinemsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryOfflineMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    queryOfflineMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryOfflineMsgResponse::GetClassData() const { return &_class_data_; }

void queryOfflineMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<queryOfflineMsgResponse *>(to)->MergeFrom(
      static_cast<const queryOfflineMsgResponse &>(from));
}


void queryOfflineMsgResponse::MergeFrom(const queryOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  offlinemsg_.MergeFrom(from.offlinemsg_);
  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryOfflineMsgResponse::CopyFrom(const queryOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineMsgResponse::IsInitialized() const {
  return true;
}

void queryOfflineMsgResponse::InternalSwap(queryOfflineMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  offlinemsg_.InternalSwap(&other->offlinemsg_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryOfflineMsgResponse, success_)
      + sizeof(queryOfflineMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(queryOfflineMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[7]);
}

// ===================================================================

class groupMsg::_Internal {
 public:
};

groupMsg::groupMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.groupMsg)
}
groupMsg::groupMsg(const groupMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    groupname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_groupname().empty()) {
    groupname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_groupname(), 
      GetArenaForAllocation());
  }
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sendname().empty()) {
    sendname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sendname(), 
      GetArenaForAllocation());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.groupMsg)
}

inline void groupMsg::SharedCtor() {
groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  groupname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msgid_ = 0;
}

groupMsg::~groupMsg() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.groupMsg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void groupMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  groupname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void groupMsg::ArenaDtor(void* object) {
  groupMsg* _this = reinterpret_cast< groupMsg* >(object);
  (void)_this;
}
void groupMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void groupMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void groupMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.groupMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupname_.ClearToEmpty();
  sendname_.ClearToEmpty();
  message_.ClearToEmpty();
  msgid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* groupMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 msgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes groupname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_groupname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes sendname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* groupMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.groupMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgid = 1;
  if (this->_internal_msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgid(), target);
  }

  // bytes groupname = 2;
  if (!this->_internal_groupname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_groupname(), target);
  }

  // bytes sendname = 3;
  if (!this->_internal_sendname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sendname(), target);
  }

  // bytes message = 4;
  if (!this->_internal_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.groupMsg)
  return target;
}

size_t groupMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.groupMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes groupname = 2;
  if (!this->_internal_groupname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_groupname());
  }

  // bytes sendname = 3;
  if (!this->_internal_sendname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sendname());
  }

  // bytes message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 msgid = 1;
  if (this->_internal_msgid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData groupMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    groupMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*groupMsg::GetClassData() const { return &_class_data_; }

void groupMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<groupMsg *>(to)->MergeFrom(
      static_cast<const groupMsg &>(from));
}


void groupMsg::MergeFrom(const groupMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.groupMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_groupname().empty()) {
    _internal_set_groupname(from._internal_groupname());
  }
  if (!from._internal_sendname().empty()) {
    _internal_set_sendname(from._internal_sendname());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_msgid() != 0) {
    _internal_set_msgid(from._internal_msgid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void groupMsg::CopyFrom(const groupMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.groupMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool groupMsg::IsInitialized() const {
  return true;
}

void groupMsg::InternalSwap(groupMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &groupname_, lhs_arena,
      &other->groupname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sendname_, lhs_arena,
      &other->sendname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(msgid_, other->msgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata groupMsg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[8]);
}

// ===================================================================

class addOfflineGroupMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::groupMsg& offlinegroupmsg(const addOfflineGroupMsgRequest* msg);
};

const ::OfflineMessageProto::groupMsg&
addOfflineGroupMsgRequest::_Internal::offlinegroupmsg(const addOfflineGroupMsgRequest* msg) {
  return *msg->offlinegroupmsg_;
}
addOfflineGroupMsgRequest::addOfflineGroupMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.addOfflineGroupMsgRequest)
}
addOfflineGroupMsgRequest::addOfflineGroupMsgRequest(const addOfflineGroupMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offlinegroupmsg()) {
    offlinegroupmsg_ = new ::OfflineMessageProto::groupMsg(*from.offlinegroupmsg_);
  } else {
    offlinegroupmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineGroupMsgRequest)
}

inline void addOfflineGroupMsgRequest::SharedCtor() {
offlinegroupmsg_ = nullptr;
}

addOfflineGroupMsgRequest::~addOfflineGroupMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineGroupMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addOfflineGroupMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete offlinegroupmsg_;
}

void addOfflineGroupMsgRequest::ArenaDtor(void* object) {
  addOfflineGroupMsgRequest* _this = reinterpret_cast< addOfflineGroupMsgRequest* >(object);
  (void)_this;
}
void addOfflineGroupMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addOfflineGroupMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addOfflineGroupMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && offlinegroupmsg_ != nullptr) {
    delete offlinegroupmsg_;
  }
  offlinegroupmsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addOfflineGroupMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinegroupmsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addOfflineGroupMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->_internal_has_offlinegroupmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinegroupmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineGroupMsgRequest)
  return target;
}

size_t addOfflineGroupMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->_internal_has_offlinegroupmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinegroupmsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addOfflineGroupMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addOfflineGroupMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addOfflineGroupMsgRequest::GetClassData() const { return &_class_data_; }

void addOfflineGroupMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addOfflineGroupMsgRequest *>(to)->MergeFrom(
      static_cast<const addOfflineGroupMsgRequest &>(from));
}


void addOfflineGroupMsgRequest::MergeFrom(const addOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offlinegroupmsg()) {
    _internal_mutable_offlinegroupmsg()->::OfflineMessageProto::groupMsg::MergeFrom(from._internal_offlinegroupmsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addOfflineGroupMsgRequest::CopyFrom(const addOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineGroupMsgRequest::IsInitialized() const {
  return true;
}

void addOfflineGroupMsgRequest::InternalSwap(addOfflineGroupMsgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offlinegroupmsg_, other->offlinegroupmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineGroupMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[9]);
}

// ===================================================================

class addOfflineGroupMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const addOfflineGroupMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
addOfflineGroupMsgResponse::_Internal::result(const addOfflineGroupMsgResponse* msg) {
  return *msg->result_;
}
addOfflineGroupMsgResponse::addOfflineGroupMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.addOfflineGroupMsgResponse)
}
addOfflineGroupMsgResponse::addOfflineGroupMsgResponse(const addOfflineGroupMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineGroupMsgResponse)
}

inline void addOfflineGroupMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

addOfflineGroupMsgResponse::~addOfflineGroupMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineGroupMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addOfflineGroupMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void addOfflineGroupMsgResponse::ArenaDtor(void* object) {
  addOfflineGroupMsgResponse* _this = reinterpret_cast< addOfflineGroupMsgResponse* >(object);
  (void)_this;
}
void addOfflineGroupMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addOfflineGroupMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addOfflineGroupMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addOfflineGroupMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addOfflineGroupMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineGroupMsgResponse)
  return target;
}

size_t addOfflineGroupMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addOfflineGroupMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addOfflineGroupMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addOfflineGroupMsgResponse::GetClassData() const { return &_class_data_; }

void addOfflineGroupMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addOfflineGroupMsgResponse *>(to)->MergeFrom(
      static_cast<const addOfflineGroupMsgResponse &>(from));
}


void addOfflineGroupMsgResponse::MergeFrom(const addOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addOfflineGroupMsgResponse::CopyFrom(const addOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineGroupMsgResponse::IsInitialized() const {
  return true;
}

void addOfflineGroupMsgResponse::InternalSwap(addOfflineGroupMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(addOfflineGroupMsgResponse, success_)
      + sizeof(addOfflineGroupMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(addOfflineGroupMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineGroupMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[10]);
}

// ===================================================================

class delOfflineGroupMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::groupMsg& offlinegroupmsg(const delOfflineGroupMsgRequest* msg);
};

const ::OfflineMessageProto::groupMsg&
delOfflineGroupMsgRequest::_Internal::offlinegroupmsg(const delOfflineGroupMsgRequest* msg) {
  return *msg->offlinegroupmsg_;
}
delOfflineGroupMsgRequest::delOfflineGroupMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.delOfflineGroupMsgRequest)
}
delOfflineGroupMsgRequest::delOfflineGroupMsgRequest(const delOfflineGroupMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offlinegroupmsg()) {
    offlinegroupmsg_ = new ::OfflineMessageProto::groupMsg(*from.offlinegroupmsg_);
  } else {
    offlinegroupmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineGroupMsgRequest)
}

inline void delOfflineGroupMsgRequest::SharedCtor() {
offlinegroupmsg_ = nullptr;
}

delOfflineGroupMsgRequest::~delOfflineGroupMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineGroupMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void delOfflineGroupMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete offlinegroupmsg_;
}

void delOfflineGroupMsgRequest::ArenaDtor(void* object) {
  delOfflineGroupMsgRequest* _this = reinterpret_cast< delOfflineGroupMsgRequest* >(object);
  (void)_this;
}
void delOfflineGroupMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delOfflineGroupMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void delOfflineGroupMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && offlinegroupmsg_ != nullptr) {
    delete offlinegroupmsg_;
  }
  offlinegroupmsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delOfflineGroupMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinegroupmsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* delOfflineGroupMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->_internal_has_offlinegroupmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinegroupmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineGroupMsgRequest)
  return target;
}

size_t delOfflineGroupMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->_internal_has_offlinegroupmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinegroupmsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData delOfflineGroupMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    delOfflineGroupMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*delOfflineGroupMsgRequest::GetClassData() const { return &_class_data_; }

void delOfflineGroupMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<delOfflineGroupMsgRequest *>(to)->MergeFrom(
      static_cast<const delOfflineGroupMsgRequest &>(from));
}


void delOfflineGroupMsgRequest::MergeFrom(const delOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offlinegroupmsg()) {
    _internal_mutable_offlinegroupmsg()->::OfflineMessageProto::groupMsg::MergeFrom(from._internal_offlinegroupmsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void delOfflineGroupMsgRequest::CopyFrom(const delOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineGroupMsgRequest::IsInitialized() const {
  return true;
}

void delOfflineGroupMsgRequest::InternalSwap(delOfflineGroupMsgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offlinegroupmsg_, other->offlinegroupmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineGroupMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[11]);
}

// ===================================================================

class delOfflineGroupMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const delOfflineGroupMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
delOfflineGroupMsgResponse::_Internal::result(const delOfflineGroupMsgResponse* msg) {
  return *msg->result_;
}
delOfflineGroupMsgResponse::delOfflineGroupMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.delOfflineGroupMsgResponse)
}
delOfflineGroupMsgResponse::delOfflineGroupMsgResponse(const delOfflineGroupMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineGroupMsgResponse)
}

inline void delOfflineGroupMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

delOfflineGroupMsgResponse::~delOfflineGroupMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineGroupMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void delOfflineGroupMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void delOfflineGroupMsgResponse::ArenaDtor(void* object) {
  delOfflineGroupMsgResponse* _this = reinterpret_cast< delOfflineGroupMsgResponse* >(object);
  (void)_this;
}
void delOfflineGroupMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delOfflineGroupMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void delOfflineGroupMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delOfflineGroupMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* delOfflineGroupMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineGroupMsgResponse)
  return target;
}

size_t delOfflineGroupMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData delOfflineGroupMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    delOfflineGroupMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*delOfflineGroupMsgResponse::GetClassData() const { return &_class_data_; }

void delOfflineGroupMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<delOfflineGroupMsgResponse *>(to)->MergeFrom(
      static_cast<const delOfflineGroupMsgResponse &>(from));
}


void delOfflineGroupMsgResponse::MergeFrom(const delOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void delOfflineGroupMsgResponse::CopyFrom(const delOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineGroupMsgResponse::IsInitialized() const {
  return true;
}

void delOfflineGroupMsgResponse::InternalSwap(delOfflineGroupMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(delOfflineGroupMsgResponse, success_)
      + sizeof(delOfflineGroupMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(delOfflineGroupMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineGroupMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[12]);
}

// ===================================================================

class queryOfflineGroupMsgRequest::_Internal {
 public:
};

queryOfflineGroupMsgRequest::queryOfflineGroupMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.queryOfflineGroupMsgRequest)
}
queryOfflineGroupMsgRequest::queryOfflineGroupMsgRequest(const queryOfflineGroupMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineGroupMsgRequest)
}

inline void queryOfflineGroupMsgRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

queryOfflineGroupMsgRequest::~queryOfflineGroupMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineGroupMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void queryOfflineGroupMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void queryOfflineGroupMsgRequest::ArenaDtor(void* object) {
  queryOfflineGroupMsgRequest* _this = reinterpret_cast< queryOfflineGroupMsgRequest* >(object);
  (void)_this;
}
void queryOfflineGroupMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void queryOfflineGroupMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void queryOfflineGroupMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryOfflineGroupMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryOfflineGroupMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (!this->_internal_username().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineGroupMsgRequest)
  return target;
}

size_t queryOfflineGroupMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryOfflineGroupMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    queryOfflineGroupMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryOfflineGroupMsgRequest::GetClassData() const { return &_class_data_; }

void queryOfflineGroupMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<queryOfflineGroupMsgRequest *>(to)->MergeFrom(
      static_cast<const queryOfflineGroupMsgRequest &>(from));
}


void queryOfflineGroupMsgRequest::MergeFrom(const queryOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryOfflineGroupMsgRequest::CopyFrom(const queryOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineGroupMsgRequest::IsInitialized() const {
  return true;
}

void queryOfflineGroupMsgRequest::InternalSwap(queryOfflineGroupMsgRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineGroupMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[13]);
}

// ===================================================================

class queryOfflineGroupMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const queryOfflineGroupMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
queryOfflineGroupMsgResponse::_Internal::result(const queryOfflineGroupMsgResponse* msg) {
  return *msg->result_;
}
queryOfflineGroupMsgResponse::queryOfflineGroupMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  offlinegroupmsg_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.queryOfflineGroupMsgResponse)
}
queryOfflineGroupMsgResponse::queryOfflineGroupMsgResponse(const queryOfflineGroupMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      offlinegroupmsg_(from.offlinegroupmsg_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineGroupMsgResponse)
}

inline void queryOfflineGroupMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

queryOfflineGroupMsgResponse::~queryOfflineGroupMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineGroupMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void queryOfflineGroupMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void queryOfflineGroupMsgResponse::ArenaDtor(void* object) {
  queryOfflineGroupMsgResponse* _this = reinterpret_cast< queryOfflineGroupMsgResponse* >(object);
  (void)_this;
}
void queryOfflineGroupMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void queryOfflineGroupMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void queryOfflineGroupMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinegroupmsg_.Clear();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryOfflineGroupMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_offlinegroupmsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .OfflineMessageProto.ResultCode result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryOfflineGroupMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_offlinegroupmsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_offlinegroupmsg(i), target, stream);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineGroupMsgResponse)
  return target;
}

size_t queryOfflineGroupMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  total_size += 1UL * this->_internal_offlinegroupmsg_size();
  for (const auto& msg : this->offlinegroupmsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryOfflineGroupMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    queryOfflineGroupMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryOfflineGroupMsgResponse::GetClassData() const { return &_class_data_; }

void queryOfflineGroupMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<queryOfflineGroupMsgResponse *>(to)->MergeFrom(
      static_cast<const queryOfflineGroupMsgResponse &>(from));
}


void queryOfflineGroupMsgResponse::MergeFrom(const queryOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  offlinegroupmsg_.MergeFrom(from.offlinegroupmsg_);
  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryOfflineGroupMsgResponse::CopyFrom(const queryOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineGroupMsgResponse::IsInitialized() const {
  return true;
}

void queryOfflineGroupMsgResponse::InternalSwap(queryOfflineGroupMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  offlinegroupmsg_.InternalSwap(&other->offlinegroupmsg_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryOfflineGroupMsgResponse, success_)
      + sizeof(queryOfflineGroupMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(queryOfflineGroupMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineGroupMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[14]);
}

// ===================================================================

class departMsg::_Internal {
 public:
};

departMsg::departMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.departMsg)
}
departMsg::departMsg(const departMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  departname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    departname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_departname().empty()) {
    departname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_departname(), 
      GetArenaForAllocation());
  }
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sendname().empty()) {
    sendname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sendname(), 
      GetArenaForAllocation());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.departMsg)
}

inline void departMsg::SharedCtor() {
departname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  departname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msgid_ = 0;
}

departMsg::~departMsg() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.departMsg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void departMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  departname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void departMsg::ArenaDtor(void* object) {
  departMsg* _this = reinterpret_cast< departMsg* >(object);
  (void)_this;
}
void departMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void departMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void departMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.departMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departname_.ClearToEmpty();
  sendname_.ClearToEmpty();
  message_.ClearToEmpty();
  msgid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* departMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 msgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes departname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_departname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes sendname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* departMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.departMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgid = 1;
  if (this->_internal_msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgid(), target);
  }

  // bytes departname = 2;
  if (!this->_internal_departname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_departname(), target);
  }

  // bytes sendname = 3;
  if (!this->_internal_sendname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sendname(), target);
  }

  // bytes message = 4;
  if (!this->_internal_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.departMsg)
  return target;
}

size_t departMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.departMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes departname = 2;
  if (!this->_internal_departname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_departname());
  }

  // bytes sendname = 3;
  if (!this->_internal_sendname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sendname());
  }

  // bytes message = 4;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 msgid = 1;
  if (this->_internal_msgid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData departMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    departMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*departMsg::GetClassData() const { return &_class_data_; }

void departMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<departMsg *>(to)->MergeFrom(
      static_cast<const departMsg &>(from));
}


void departMsg::MergeFrom(const departMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.departMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_departname().empty()) {
    _internal_set_departname(from._internal_departname());
  }
  if (!from._internal_sendname().empty()) {
    _internal_set_sendname(from._internal_sendname());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_msgid() != 0) {
    _internal_set_msgid(from._internal_msgid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void departMsg::CopyFrom(const departMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.departMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool departMsg::IsInitialized() const {
  return true;
}

void departMsg::InternalSwap(departMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &departname_, lhs_arena,
      &other->departname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sendname_, lhs_arena,
      &other->sendname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(msgid_, other->msgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata departMsg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[15]);
}

// ===================================================================

class addOfflineDepartMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::departMsg& offlinedepartmsg(const addOfflineDepartMsgRequest* msg);
};

const ::OfflineMessageProto::departMsg&
addOfflineDepartMsgRequest::_Internal::offlinedepartmsg(const addOfflineDepartMsgRequest* msg) {
  return *msg->offlinedepartmsg_;
}
addOfflineDepartMsgRequest::addOfflineDepartMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.addOfflineDepartMsgRequest)
}
addOfflineDepartMsgRequest::addOfflineDepartMsgRequest(const addOfflineDepartMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offlinedepartmsg()) {
    offlinedepartmsg_ = new ::OfflineMessageProto::departMsg(*from.offlinedepartmsg_);
  } else {
    offlinedepartmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineDepartMsgRequest)
}

inline void addOfflineDepartMsgRequest::SharedCtor() {
offlinedepartmsg_ = nullptr;
}

addOfflineDepartMsgRequest::~addOfflineDepartMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineDepartMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addOfflineDepartMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete offlinedepartmsg_;
}

void addOfflineDepartMsgRequest::ArenaDtor(void* object) {
  addOfflineDepartMsgRequest* _this = reinterpret_cast< addOfflineDepartMsgRequest* >(object);
  (void)_this;
}
void addOfflineDepartMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addOfflineDepartMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addOfflineDepartMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && offlinedepartmsg_ != nullptr) {
    delete offlinedepartmsg_;
  }
  offlinedepartmsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addOfflineDepartMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinedepartmsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addOfflineDepartMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->_internal_has_offlinedepartmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinedepartmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineDepartMsgRequest)
  return target;
}

size_t addOfflineDepartMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->_internal_has_offlinedepartmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinedepartmsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addOfflineDepartMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addOfflineDepartMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addOfflineDepartMsgRequest::GetClassData() const { return &_class_data_; }

void addOfflineDepartMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addOfflineDepartMsgRequest *>(to)->MergeFrom(
      static_cast<const addOfflineDepartMsgRequest &>(from));
}


void addOfflineDepartMsgRequest::MergeFrom(const addOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offlinedepartmsg()) {
    _internal_mutable_offlinedepartmsg()->::OfflineMessageProto::departMsg::MergeFrom(from._internal_offlinedepartmsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addOfflineDepartMsgRequest::CopyFrom(const addOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineDepartMsgRequest::IsInitialized() const {
  return true;
}

void addOfflineDepartMsgRequest::InternalSwap(addOfflineDepartMsgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offlinedepartmsg_, other->offlinedepartmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineDepartMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[16]);
}

// ===================================================================

class addOfflineDepartMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const addOfflineDepartMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
addOfflineDepartMsgResponse::_Internal::result(const addOfflineDepartMsgResponse* msg) {
  return *msg->result_;
}
addOfflineDepartMsgResponse::addOfflineDepartMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.addOfflineDepartMsgResponse)
}
addOfflineDepartMsgResponse::addOfflineDepartMsgResponse(const addOfflineDepartMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineDepartMsgResponse)
}

inline void addOfflineDepartMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

addOfflineDepartMsgResponse::~addOfflineDepartMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineDepartMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addOfflineDepartMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void addOfflineDepartMsgResponse::ArenaDtor(void* object) {
  addOfflineDepartMsgResponse* _this = reinterpret_cast< addOfflineDepartMsgResponse* >(object);
  (void)_this;
}
void addOfflineDepartMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addOfflineDepartMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addOfflineDepartMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addOfflineDepartMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addOfflineDepartMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineDepartMsgResponse)
  return target;
}

size_t addOfflineDepartMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addOfflineDepartMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addOfflineDepartMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addOfflineDepartMsgResponse::GetClassData() const { return &_class_data_; }

void addOfflineDepartMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addOfflineDepartMsgResponse *>(to)->MergeFrom(
      static_cast<const addOfflineDepartMsgResponse &>(from));
}


void addOfflineDepartMsgResponse::MergeFrom(const addOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addOfflineDepartMsgResponse::CopyFrom(const addOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineDepartMsgResponse::IsInitialized() const {
  return true;
}

void addOfflineDepartMsgResponse::InternalSwap(addOfflineDepartMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(addOfflineDepartMsgResponse, success_)
      + sizeof(addOfflineDepartMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(addOfflineDepartMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineDepartMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[17]);
}

// ===================================================================

class delOfflineDepartMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::departMsg& offlinedepartmsg(const delOfflineDepartMsgRequest* msg);
};

const ::OfflineMessageProto::departMsg&
delOfflineDepartMsgRequest::_Internal::offlinedepartmsg(const delOfflineDepartMsgRequest* msg) {
  return *msg->offlinedepartmsg_;
}
delOfflineDepartMsgRequest::delOfflineDepartMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.delOfflineDepartMsgRequest)
}
delOfflineDepartMsgRequest::delOfflineDepartMsgRequest(const delOfflineDepartMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offlinedepartmsg()) {
    offlinedepartmsg_ = new ::OfflineMessageProto::departMsg(*from.offlinedepartmsg_);
  } else {
    offlinedepartmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineDepartMsgRequest)
}

inline void delOfflineDepartMsgRequest::SharedCtor() {
offlinedepartmsg_ = nullptr;
}

delOfflineDepartMsgRequest::~delOfflineDepartMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineDepartMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void delOfflineDepartMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete offlinedepartmsg_;
}

void delOfflineDepartMsgRequest::ArenaDtor(void* object) {
  delOfflineDepartMsgRequest* _this = reinterpret_cast< delOfflineDepartMsgRequest* >(object);
  (void)_this;
}
void delOfflineDepartMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delOfflineDepartMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void delOfflineDepartMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && offlinedepartmsg_ != nullptr) {
    delete offlinedepartmsg_;
  }
  offlinedepartmsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delOfflineDepartMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinedepartmsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* delOfflineDepartMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->_internal_has_offlinedepartmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinedepartmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineDepartMsgRequest)
  return target;
}

size_t delOfflineDepartMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->_internal_has_offlinedepartmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinedepartmsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData delOfflineDepartMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    delOfflineDepartMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*delOfflineDepartMsgRequest::GetClassData() const { return &_class_data_; }

void delOfflineDepartMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<delOfflineDepartMsgRequest *>(to)->MergeFrom(
      static_cast<const delOfflineDepartMsgRequest &>(from));
}


void delOfflineDepartMsgRequest::MergeFrom(const delOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offlinedepartmsg()) {
    _internal_mutable_offlinedepartmsg()->::OfflineMessageProto::departMsg::MergeFrom(from._internal_offlinedepartmsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void delOfflineDepartMsgRequest::CopyFrom(const delOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineDepartMsgRequest::IsInitialized() const {
  return true;
}

void delOfflineDepartMsgRequest::InternalSwap(delOfflineDepartMsgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offlinedepartmsg_, other->offlinedepartmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineDepartMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[18]);
}

// ===================================================================

class delOfflineDepartMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const delOfflineDepartMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
delOfflineDepartMsgResponse::_Internal::result(const delOfflineDepartMsgResponse* msg) {
  return *msg->result_;
}
delOfflineDepartMsgResponse::delOfflineDepartMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.delOfflineDepartMsgResponse)
}
delOfflineDepartMsgResponse::delOfflineDepartMsgResponse(const delOfflineDepartMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineDepartMsgResponse)
}

inline void delOfflineDepartMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

delOfflineDepartMsgResponse::~delOfflineDepartMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineDepartMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void delOfflineDepartMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void delOfflineDepartMsgResponse::ArenaDtor(void* object) {
  delOfflineDepartMsgResponse* _this = reinterpret_cast< delOfflineDepartMsgResponse* >(object);
  (void)_this;
}
void delOfflineDepartMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delOfflineDepartMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void delOfflineDepartMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delOfflineDepartMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* delOfflineDepartMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineDepartMsgResponse)
  return target;
}

size_t delOfflineDepartMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData delOfflineDepartMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    delOfflineDepartMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*delOfflineDepartMsgResponse::GetClassData() const { return &_class_data_; }

void delOfflineDepartMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<delOfflineDepartMsgResponse *>(to)->MergeFrom(
      static_cast<const delOfflineDepartMsgResponse &>(from));
}


void delOfflineDepartMsgResponse::MergeFrom(const delOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void delOfflineDepartMsgResponse::CopyFrom(const delOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineDepartMsgResponse::IsInitialized() const {
  return true;
}

void delOfflineDepartMsgResponse::InternalSwap(delOfflineDepartMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(delOfflineDepartMsgResponse, success_)
      + sizeof(delOfflineDepartMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(delOfflineDepartMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineDepartMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[19]);
}

// ===================================================================

class queryOfflineDepartMsgRequest::_Internal {
 public:
};

queryOfflineDepartMsgRequest::queryOfflineDepartMsgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.queryOfflineDepartMsgRequest)
}
queryOfflineDepartMsgRequest::queryOfflineDepartMsgRequest(const queryOfflineDepartMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineDepartMsgRequest)
}

inline void queryOfflineDepartMsgRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

queryOfflineDepartMsgRequest::~queryOfflineDepartMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineDepartMsgRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void queryOfflineDepartMsgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void queryOfflineDepartMsgRequest::ArenaDtor(void* object) {
  queryOfflineDepartMsgRequest* _this = reinterpret_cast< queryOfflineDepartMsgRequest* >(object);
  (void)_this;
}
void queryOfflineDepartMsgRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void queryOfflineDepartMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void queryOfflineDepartMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryOfflineDepartMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryOfflineDepartMsgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (!this->_internal_username().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineDepartMsgRequest)
  return target;
}

size_t queryOfflineDepartMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryOfflineDepartMsgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    queryOfflineDepartMsgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryOfflineDepartMsgRequest::GetClassData() const { return &_class_data_; }

void queryOfflineDepartMsgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<queryOfflineDepartMsgRequest *>(to)->MergeFrom(
      static_cast<const queryOfflineDepartMsgRequest &>(from));
}


void queryOfflineDepartMsgRequest::MergeFrom(const queryOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryOfflineDepartMsgRequest::CopyFrom(const queryOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineDepartMsgRequest::IsInitialized() const {
  return true;
}

void queryOfflineDepartMsgRequest::InternalSwap(queryOfflineDepartMsgRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineDepartMsgRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[20]);
}

// ===================================================================

class queryOfflineDepartMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const queryOfflineDepartMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
queryOfflineDepartMsgResponse::_Internal::result(const queryOfflineDepartMsgResponse* msg) {
  return *msg->result_;
}
queryOfflineDepartMsgResponse::queryOfflineDepartMsgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  offlinedepartmsg_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:OfflineMessageProto.queryOfflineDepartMsgResponse)
}
queryOfflineDepartMsgResponse::queryOfflineDepartMsgResponse(const queryOfflineDepartMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      offlinedepartmsg_(from.offlinedepartmsg_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineDepartMsgResponse)
}

inline void queryOfflineDepartMsgResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

queryOfflineDepartMsgResponse::~queryOfflineDepartMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineDepartMsgResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void queryOfflineDepartMsgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void queryOfflineDepartMsgResponse::ArenaDtor(void* object) {
  queryOfflineDepartMsgResponse* _this = reinterpret_cast< queryOfflineDepartMsgResponse* >(object);
  (void)_this;
}
void queryOfflineDepartMsgResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void queryOfflineDepartMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void queryOfflineDepartMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinedepartmsg_.Clear();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryOfflineDepartMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_offlinedepartmsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .OfflineMessageProto.ResultCode result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryOfflineDepartMsgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_offlinedepartmsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_offlinedepartmsg(i), target, stream);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineDepartMsgResponse)
  return target;
}

size_t queryOfflineDepartMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  total_size += 1UL * this->_internal_offlinedepartmsg_size();
  for (const auto& msg : this->offlinedepartmsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryOfflineDepartMsgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    queryOfflineDepartMsgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryOfflineDepartMsgResponse::GetClassData() const { return &_class_data_; }

void queryOfflineDepartMsgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<queryOfflineDepartMsgResponse *>(to)->MergeFrom(
      static_cast<const queryOfflineDepartMsgResponse &>(from));
}


void queryOfflineDepartMsgResponse::MergeFrom(const queryOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  offlinedepartmsg_.MergeFrom(from.offlinedepartmsg_);
  if (from._internal_has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryOfflineDepartMsgResponse::CopyFrom(const queryOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineDepartMsgResponse::IsInitialized() const {
  return true;
}

void queryOfflineDepartMsgResponse::InternalSwap(queryOfflineDepartMsgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  offlinedepartmsg_.InternalSwap(&other->offlinedepartmsg_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryOfflineDepartMsgResponse, success_)
      + sizeof(queryOfflineDepartMsgResponse::success_)
      - PROTOBUF_FIELD_OFFSET(queryOfflineDepartMsgResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineDepartMsgResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_offlinemessage_2eproto_getter, &descriptor_table_offlinemessage_2eproto_once,
      file_level_metadata_offlinemessage_2eproto[21]);
}

// ===================================================================

offlineMsgRpc::~offlineMsgRpc() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* offlineMsgRpc::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_offlinemessage_2eproto);
  return file_level_service_descriptors_offlinemessage_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* offlineMsgRpc::GetDescriptor() {
  return descriptor();
}

void offlineMsgRpc::AddOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::addOfflineMsgRequest*,
                         ::OfflineMessageProto::addOfflineMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddOfflineMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::DelOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::delOfflineMsgRequest*,
                         ::OfflineMessageProto::delOfflineMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOfflineMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::QueryOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::queryOfflineMsgRequest*,
                         ::OfflineMessageProto::queryOfflineMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryOfflineMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::AddOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::addOfflineGroupMsgRequest*,
                         ::OfflineMessageProto::addOfflineGroupMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddOfflineGroupMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::DelOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::delOfflineGroupMsgRequest*,
                         ::OfflineMessageProto::delOfflineGroupMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOfflineGroupMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::QueryOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::queryOfflineGroupMsgRequest*,
                         ::OfflineMessageProto::queryOfflineGroupMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryOfflineGroupMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::AddOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::addOfflineDepartMsgRequest*,
                         ::OfflineMessageProto::addOfflineDepartMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddOfflineDepartMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::DelOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::delOfflineDepartMsgRequest*,
                         ::OfflineMessageProto::delOfflineDepartMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOfflineDepartMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::QueryOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::queryOfflineDepartMsgRequest*,
                         ::OfflineMessageProto::queryOfflineDepartMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryOfflineDepartMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_offlinemessage_2eproto[0]);
  switch(method->index()) {
    case 0:
      AddOfflineMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::addOfflineMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::addOfflineMsgResponse*>(
                 response),
             done);
      break;
    case 1:
      DelOfflineMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::delOfflineMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::delOfflineMsgResponse*>(
                 response),
             done);
      break;
    case 2:
      QueryOfflineMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::queryOfflineMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::queryOfflineMsgResponse*>(
                 response),
             done);
      break;
    case 3:
      AddOfflineGroupMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::addOfflineGroupMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::addOfflineGroupMsgResponse*>(
                 response),
             done);
      break;
    case 4:
      DelOfflineGroupMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::delOfflineGroupMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::delOfflineGroupMsgResponse*>(
                 response),
             done);
      break;
    case 5:
      QueryOfflineGroupMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::queryOfflineGroupMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::queryOfflineGroupMsgResponse*>(
                 response),
             done);
      break;
    case 6:
      AddOfflineDepartMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::addOfflineDepartMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::addOfflineDepartMsgResponse*>(
                 response),
             done);
      break;
    case 7:
      DelOfflineDepartMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::delOfflineDepartMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::delOfflineDepartMsgResponse*>(
                 response),
             done);
      break;
    case 8:
      QueryOfflineDepartMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::queryOfflineDepartMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::queryOfflineDepartMsgResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& offlineMsgRpc::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::OfflineMessageProto::addOfflineMsgRequest::default_instance();
    case 1:
      return ::OfflineMessageProto::delOfflineMsgRequest::default_instance();
    case 2:
      return ::OfflineMessageProto::queryOfflineMsgRequest::default_instance();
    case 3:
      return ::OfflineMessageProto::addOfflineGroupMsgRequest::default_instance();
    case 4:
      return ::OfflineMessageProto::delOfflineGroupMsgRequest::default_instance();
    case 5:
      return ::OfflineMessageProto::queryOfflineGroupMsgRequest::default_instance();
    case 6:
      return ::OfflineMessageProto::addOfflineDepartMsgRequest::default_instance();
    case 7:
      return ::OfflineMessageProto::delOfflineDepartMsgRequest::default_instance();
    case 8:
      return ::OfflineMessageProto::queryOfflineDepartMsgRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& offlineMsgRpc::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::OfflineMessageProto::addOfflineMsgResponse::default_instance();
    case 1:
      return ::OfflineMessageProto::delOfflineMsgResponse::default_instance();
    case 2:
      return ::OfflineMessageProto::queryOfflineMsgResponse::default_instance();
    case 3:
      return ::OfflineMessageProto::addOfflineGroupMsgResponse::default_instance();
    case 4:
      return ::OfflineMessageProto::delOfflineGroupMsgResponse::default_instance();
    case 5:
      return ::OfflineMessageProto::queryOfflineGroupMsgResponse::default_instance();
    case 6:
      return ::OfflineMessageProto::addOfflineDepartMsgResponse::default_instance();
    case 7:
      return ::OfflineMessageProto::delOfflineDepartMsgResponse::default_instance();
    case 8:
      return ::OfflineMessageProto::queryOfflineDepartMsgResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

offlineMsgRpc_Stub::offlineMsgRpc_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
offlineMsgRpc_Stub::offlineMsgRpc_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
offlineMsgRpc_Stub::~offlineMsgRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void offlineMsgRpc_Stub::AddOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::addOfflineMsgRequest* request,
                              ::OfflineMessageProto::addOfflineMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::DelOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::delOfflineMsgRequest* request,
                              ::OfflineMessageProto::delOfflineMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::QueryOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::queryOfflineMsgRequest* request,
                              ::OfflineMessageProto::queryOfflineMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::AddOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::addOfflineGroupMsgRequest* request,
                              ::OfflineMessageProto::addOfflineGroupMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::DelOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::delOfflineGroupMsgRequest* request,
                              ::OfflineMessageProto::delOfflineGroupMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::QueryOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::queryOfflineGroupMsgRequest* request,
                              ::OfflineMessageProto::queryOfflineGroupMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::AddOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::addOfflineDepartMsgRequest* request,
                              ::OfflineMessageProto::addOfflineDepartMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::DelOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::delOfflineDepartMsgRequest* request,
                              ::OfflineMessageProto::delOfflineDepartMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::QueryOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::queryOfflineDepartMsgRequest* request,
                              ::OfflineMessageProto::queryOfflineDepartMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace OfflineMessageProto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::ResultCode* Arena::CreateMaybeMessage< ::OfflineMessageProto::ResultCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::ResultCode >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::msg* Arena::CreateMaybeMessage< ::OfflineMessageProto::msg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::msg >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::addOfflineMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::addOfflineMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::delOfflineMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::delOfflineMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::queryOfflineMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::queryOfflineMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::groupMsg* Arena::CreateMaybeMessage< ::OfflineMessageProto::groupMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::groupMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineGroupMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineGroupMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::addOfflineGroupMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineGroupMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineGroupMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::addOfflineGroupMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineGroupMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineGroupMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::delOfflineGroupMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineGroupMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineGroupMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::delOfflineGroupMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineGroupMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineGroupMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::queryOfflineGroupMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineGroupMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineGroupMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::queryOfflineGroupMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::departMsg* Arena::CreateMaybeMessage< ::OfflineMessageProto::departMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::departMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineDepartMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineDepartMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::addOfflineDepartMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineDepartMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineDepartMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::addOfflineDepartMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineDepartMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineDepartMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::delOfflineDepartMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineDepartMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineDepartMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::delOfflineDepartMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineDepartMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineDepartMsgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::queryOfflineDepartMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineDepartMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineDepartMsgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::OfflineMessageProto::queryOfflineDepartMsgResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
