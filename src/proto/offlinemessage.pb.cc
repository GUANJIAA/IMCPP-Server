// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offlinemessage.proto

#include "offlinemessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_offlinemessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultCode_offlinemessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_offlinemessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_departMsg_offlinemessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_offlinemessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_groupMsg_offlinemessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_offlinemessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_msg_offlinemessage_2eproto;
namespace OfflineMessageProto {
class ResultCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultCode> _instance;
} _ResultCode_default_instance_;
class msgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<msg> _instance;
} _msg_default_instance_;
class addOfflineMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<addOfflineMsgRequest> _instance;
} _addOfflineMsgRequest_default_instance_;
class addOfflineMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<addOfflineMsgResponse> _instance;
} _addOfflineMsgResponse_default_instance_;
class delOfflineMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delOfflineMsgRequest> _instance;
} _delOfflineMsgRequest_default_instance_;
class delOfflineMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delOfflineMsgResponse> _instance;
} _delOfflineMsgResponse_default_instance_;
class queryOfflineMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<queryOfflineMsgRequest> _instance;
} _queryOfflineMsgRequest_default_instance_;
class queryOfflineMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<queryOfflineMsgResponse> _instance;
} _queryOfflineMsgResponse_default_instance_;
class groupMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<groupMsg> _instance;
} _groupMsg_default_instance_;
class addOfflineGroupMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<addOfflineGroupMsgRequest> _instance;
} _addOfflineGroupMsgRequest_default_instance_;
class addOfflineGroupMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<addOfflineGroupMsgResponse> _instance;
} _addOfflineGroupMsgResponse_default_instance_;
class delOfflineGroupMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delOfflineGroupMsgRequest> _instance;
} _delOfflineGroupMsgRequest_default_instance_;
class delOfflineGroupMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delOfflineGroupMsgResponse> _instance;
} _delOfflineGroupMsgResponse_default_instance_;
class queryOfflineGroupMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<queryOfflineGroupMsgRequest> _instance;
} _queryOfflineGroupMsgRequest_default_instance_;
class queryOfflineGroupMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<queryOfflineGroupMsgResponse> _instance;
} _queryOfflineGroupMsgResponse_default_instance_;
class departMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<departMsg> _instance;
} _departMsg_default_instance_;
class addOfflineDepartMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<addOfflineDepartMsgRequest> _instance;
} _addOfflineDepartMsgRequest_default_instance_;
class addOfflineDepartMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<addOfflineDepartMsgResponse> _instance;
} _addOfflineDepartMsgResponse_default_instance_;
class delOfflineDepartMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delOfflineDepartMsgRequest> _instance;
} _delOfflineDepartMsgRequest_default_instance_;
class delOfflineDepartMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delOfflineDepartMsgResponse> _instance;
} _delOfflineDepartMsgResponse_default_instance_;
class queryOfflineDepartMsgRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<queryOfflineDepartMsgRequest> _instance;
} _queryOfflineDepartMsgRequest_default_instance_;
class queryOfflineDepartMsgResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<queryOfflineDepartMsgResponse> _instance;
} _queryOfflineDepartMsgResponse_default_instance_;
}  // namespace OfflineMessageProto
static void InitDefaultsscc_info_ResultCode_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_ResultCode_default_instance_;
    new (ptr) ::OfflineMessageProto::ResultCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::ResultCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultCode_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResultCode_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_addOfflineDepartMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_addOfflineDepartMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::addOfflineDepartMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::addOfflineDepartMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_addOfflineDepartMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_addOfflineDepartMsgRequest_offlinemessage_2eproto}, {
      &scc_info_departMsg_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_addOfflineDepartMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_addOfflineDepartMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::addOfflineDepartMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::addOfflineDepartMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_addOfflineDepartMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_addOfflineDepartMsgResponse_offlinemessage_2eproto}, {
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_addOfflineGroupMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_addOfflineGroupMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::addOfflineGroupMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::addOfflineGroupMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_addOfflineGroupMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_addOfflineGroupMsgRequest_offlinemessage_2eproto}, {
      &scc_info_groupMsg_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_addOfflineGroupMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_addOfflineGroupMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::addOfflineGroupMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::addOfflineGroupMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_addOfflineGroupMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_addOfflineGroupMsgResponse_offlinemessage_2eproto}, {
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_addOfflineMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_addOfflineMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::addOfflineMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::addOfflineMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_addOfflineMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_addOfflineMsgRequest_offlinemessage_2eproto}, {
      &scc_info_msg_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_addOfflineMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_addOfflineMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::addOfflineMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::addOfflineMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_addOfflineMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_addOfflineMsgResponse_offlinemessage_2eproto}, {
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_delOfflineDepartMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_delOfflineDepartMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::delOfflineDepartMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::delOfflineDepartMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delOfflineDepartMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delOfflineDepartMsgRequest_offlinemessage_2eproto}, {
      &scc_info_departMsg_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_delOfflineDepartMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_delOfflineDepartMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::delOfflineDepartMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::delOfflineDepartMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delOfflineDepartMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delOfflineDepartMsgResponse_offlinemessage_2eproto}, {
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_delOfflineGroupMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_delOfflineGroupMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::delOfflineGroupMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::delOfflineGroupMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delOfflineGroupMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delOfflineGroupMsgRequest_offlinemessage_2eproto}, {
      &scc_info_groupMsg_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_delOfflineGroupMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_delOfflineGroupMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::delOfflineGroupMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::delOfflineGroupMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delOfflineGroupMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delOfflineGroupMsgResponse_offlinemessage_2eproto}, {
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_delOfflineMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_delOfflineMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::delOfflineMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::delOfflineMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delOfflineMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delOfflineMsgRequest_offlinemessage_2eproto}, {
      &scc_info_msg_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_delOfflineMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_delOfflineMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::delOfflineMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::delOfflineMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delOfflineMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delOfflineMsgResponse_offlinemessage_2eproto}, {
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_departMsg_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_departMsg_default_instance_;
    new (ptr) ::OfflineMessageProto::departMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::departMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_departMsg_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_departMsg_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_groupMsg_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_groupMsg_default_instance_;
    new (ptr) ::OfflineMessageProto::groupMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::groupMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_groupMsg_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_groupMsg_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_msg_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_msg_default_instance_;
    new (ptr) ::OfflineMessageProto::msg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::msg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_msg_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_msg_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_queryOfflineDepartMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_queryOfflineDepartMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::queryOfflineDepartMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::queryOfflineDepartMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_queryOfflineDepartMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_queryOfflineDepartMsgRequest_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_queryOfflineDepartMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_queryOfflineDepartMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::queryOfflineDepartMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::queryOfflineDepartMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_queryOfflineDepartMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_queryOfflineDepartMsgResponse_offlinemessage_2eproto}, {
      &scc_info_departMsg_offlinemessage_2eproto.base,
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_queryOfflineGroupMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_queryOfflineGroupMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::queryOfflineGroupMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::queryOfflineGroupMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_queryOfflineGroupMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_queryOfflineGroupMsgRequest_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_queryOfflineGroupMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_queryOfflineGroupMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::queryOfflineGroupMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::queryOfflineGroupMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_queryOfflineGroupMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_queryOfflineGroupMsgResponse_offlinemessage_2eproto}, {
      &scc_info_groupMsg_offlinemessage_2eproto.base,
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static void InitDefaultsscc_info_queryOfflineMsgRequest_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_queryOfflineMsgRequest_default_instance_;
    new (ptr) ::OfflineMessageProto::queryOfflineMsgRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::queryOfflineMsgRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_queryOfflineMsgRequest_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_queryOfflineMsgRequest_offlinemessage_2eproto}, {}};

static void InitDefaultsscc_info_queryOfflineMsgResponse_offlinemessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::OfflineMessageProto::_queryOfflineMsgResponse_default_instance_;
    new (ptr) ::OfflineMessageProto::queryOfflineMsgResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OfflineMessageProto::queryOfflineMsgResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_queryOfflineMsgResponse_offlinemessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_queryOfflineMsgResponse_offlinemessage_2eproto}, {
      &scc_info_msg_offlinemessage_2eproto.base,
      &scc_info_ResultCode_offlinemessage_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_offlinemessage_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_offlinemessage_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_offlinemessage_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_offlinemessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::ResultCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::ResultCode, errcode_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::ResultCode, errmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, msgid_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, recvname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, sendname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::msg, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgRequest, offlinemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgRequest, offlinemsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgRequest, recvname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, offlinemsg_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, msgid_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, groupname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, sendname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::groupMsg, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgRequest, offlinegroupmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineGroupMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgRequest, offlinegroupmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineGroupMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, offlinegroupmsg_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineGroupMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, msgid_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, departname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, sendname_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::departMsg, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgRequest, offlinedepartmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::addOfflineDepartMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgRequest, offlinedepartmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::delOfflineDepartMsgResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, offlinedepartmsg_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, result_),
  PROTOBUF_FIELD_OFFSET(::OfflineMessageProto::queryOfflineDepartMsgResponse, success_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::OfflineMessageProto::ResultCode)},
  { 7, -1, sizeof(::OfflineMessageProto::msg)},
  { 16, -1, sizeof(::OfflineMessageProto::addOfflineMsgRequest)},
  { 22, -1, sizeof(::OfflineMessageProto::addOfflineMsgResponse)},
  { 29, -1, sizeof(::OfflineMessageProto::delOfflineMsgRequest)},
  { 35, -1, sizeof(::OfflineMessageProto::delOfflineMsgResponse)},
  { 42, -1, sizeof(::OfflineMessageProto::queryOfflineMsgRequest)},
  { 48, -1, sizeof(::OfflineMessageProto::queryOfflineMsgResponse)},
  { 56, -1, sizeof(::OfflineMessageProto::groupMsg)},
  { 65, -1, sizeof(::OfflineMessageProto::addOfflineGroupMsgRequest)},
  { 71, -1, sizeof(::OfflineMessageProto::addOfflineGroupMsgResponse)},
  { 78, -1, sizeof(::OfflineMessageProto::delOfflineGroupMsgRequest)},
  { 84, -1, sizeof(::OfflineMessageProto::delOfflineGroupMsgResponse)},
  { 91, -1, sizeof(::OfflineMessageProto::queryOfflineGroupMsgRequest)},
  { 97, -1, sizeof(::OfflineMessageProto::queryOfflineGroupMsgResponse)},
  { 105, -1, sizeof(::OfflineMessageProto::departMsg)},
  { 114, -1, sizeof(::OfflineMessageProto::addOfflineDepartMsgRequest)},
  { 120, -1, sizeof(::OfflineMessageProto::addOfflineDepartMsgResponse)},
  { 127, -1, sizeof(::OfflineMessageProto::delOfflineDepartMsgRequest)},
  { 133, -1, sizeof(::OfflineMessageProto::delOfflineDepartMsgResponse)},
  { 140, -1, sizeof(::OfflineMessageProto::queryOfflineDepartMsgRequest)},
  { 146, -1, sizeof(::OfflineMessageProto::queryOfflineDepartMsgResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_ResultCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_msg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_groupMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineGroupMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineGroupMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineGroupMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineGroupMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineGroupMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineGroupMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_departMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineDepartMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_addOfflineDepartMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineDepartMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_delOfflineDepartMsgResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineDepartMsgRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::OfflineMessageProto::_queryOfflineDepartMsgResponse_default_instance_),
};

const char descriptor_table_protodef_offlinemessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024offlinemessage.proto\022\023OfflineMessagePr"
  "oto\"-\n\nResultCode\022\017\n\007errcode\030\001 \001(\005\022\016\n\006er"
  "rmsg\030\002 \001(\014\"I\n\003msg\022\r\n\005msgid\030\001 \001(\005\022\020\n\010recv"
  "name\030\002 \001(\014\022\020\n\010sendname\030\003 \001(\014\022\017\n\007message\030"
  "\004 \001(\014\"D\n\024addOfflineMsgRequest\022,\n\nOffline"
  "Msg\030\001 \001(\0132\030.OfflineMessageProto.msg\"Y\n\025a"
  "ddOfflineMsgResponse\022/\n\006result\030\001 \001(\0132\037.O"
  "fflineMessageProto.ResultCode\022\017\n\007success"
  "\030\002 \001(\010\"D\n\024delOfflineMsgRequest\022,\n\nOfflin"
  "eMsg\030\001 \001(\0132\030.OfflineMessageProto.msg\"Y\n\025"
  "delOfflineMsgResponse\022/\n\006result\030\001 \001(\0132\037."
  "OfflineMessageProto.ResultCode\022\017\n\007succes"
  "s\030\002 \001(\010\"*\n\026queryOfflineMsgRequest\022\020\n\010rec"
  "vname\030\001 \001(\014\"\211\001\n\027queryOfflineMsgResponse\022"
  ",\n\nOfflineMsg\030\001 \003(\0132\030.OfflineMessageProt"
  "o.msg\022/\n\006result\030\002 \001(\0132\037.OfflineMessagePr"
  "oto.ResultCode\022\017\n\007success\030\003 \001(\010\"O\n\010group"
  "Msg\022\r\n\005msgid\030\001 \001(\005\022\021\n\tgroupname\030\002 \001(\014\022\020\n"
  "\010sendname\030\003 \001(\014\022\017\n\007message\030\004 \001(\014\"S\n\031addO"
  "fflineGroupMsgRequest\0226\n\017OfflineGroupMsg"
  "\030\001 \001(\0132\035.OfflineMessageProto.groupMsg\"^\n"
  "\032addOfflineGroupMsgResponse\022/\n\006result\030\001 "
  "\001(\0132\037.OfflineMessageProto.ResultCode\022\017\n\007"
  "success\030\002 \001(\010\"S\n\031delOfflineGroupMsgReque"
  "st\0226\n\017OfflineGroupMsg\030\001 \001(\0132\035.OfflineMes"
  "sageProto.groupMsg\"^\n\032delOfflineGroupMsg"
  "Response\022/\n\006result\030\001 \001(\0132\037.OfflineMessag"
  "eProto.ResultCode\022\017\n\007success\030\002 \001(\010\"/\n\033qu"
  "eryOfflineGroupMsgRequest\022\020\n\010username\030\001 "
  "\001(\014\"\230\001\n\034queryOfflineGroupMsgResponse\0226\n\017"
  "OfflineGroupMsg\030\001 \003(\0132\035.OfflineMessagePr"
  "oto.groupMsg\022/\n\006result\030\002 \001(\0132\037.OfflineMe"
  "ssageProto.ResultCode\022\017\n\007success\030\003 \001(\010\"Q"
  "\n\tdepartMsg\022\r\n\005msgid\030\001 \001(\005\022\022\n\ndepartname"
  "\030\002 \001(\014\022\020\n\010sendname\030\003 \001(\014\022\017\n\007message\030\004 \001("
  "\014\"V\n\032addOfflineDepartMsgRequest\0228\n\020Offli"
  "neDepartMsg\030\001 \001(\0132\036.OfflineMessageProto."
  "departMsg\"_\n\033addOfflineDepartMsgResponse"
  "\022/\n\006result\030\001 \001(\0132\037.OfflineMessageProto.R"
  "esultCode\022\017\n\007success\030\002 \001(\010\"V\n\032delOffline"
  "DepartMsgRequest\0228\n\020OfflineDepartMsg\030\001 \001"
  "(\0132\036.OfflineMessageProto.departMsg\"_\n\033de"
  "lOfflineDepartMsgResponse\022/\n\006result\030\001 \001("
  "\0132\037.OfflineMessageProto.ResultCode\022\017\n\007su"
  "ccess\030\002 \001(\010\"0\n\034queryOfflineDepartMsgRequ"
  "est\022\020\n\010username\030\001 \001(\014\"\233\001\n\035queryOfflineDe"
  "partMsgResponse\0228\n\020OfflineDepartMsg\030\001 \003("
  "\0132\036.OfflineMessageProto.departMsg\022/\n\006res"
  "ult\030\002 \001(\0132\037.OfflineMessageProto.ResultCo"
  "de\022\017\n\007success\030\003 \001(\0102\254\010\n\rofflineMsgRpc\022f\n"
  "\rAddOfflineMsg\022).OfflineMessageProto.add"
  "OfflineMsgRequest\032*.OfflineMessageProto."
  "addOfflineMsgResponse\022f\n\rDelOfflineMsg\022)"
  ".OfflineMessageProto.delOfflineMsgReques"
  "t\032*.OfflineMessageProto.delOfflineMsgRes"
  "ponse\022l\n\017QueryOfflineMsg\022+.OfflineMessag"
  "eProto.queryOfflineMsgRequest\032,.OfflineM"
  "essageProto.queryOfflineMsgResponse\022u\n\022A"
  "ddOfflineGroupMsg\022..OfflineMessageProto."
  "addOfflineGroupMsgRequest\032/.OfflineMessa"
  "geProto.addOfflineGroupMsgResponse\022u\n\022De"
  "lOfflineGroupMsg\022..OfflineMessageProto.d"
  "elOfflineGroupMsgRequest\032/.OfflineMessag"
  "eProto.delOfflineGroupMsgResponse\022{\n\024Que"
  "ryOfflineGroupMsg\0220.OfflineMessageProto."
  "queryOfflineGroupMsgRequest\0321.OfflineMes"
  "sageProto.queryOfflineGroupMsgResponse\022x"
  "\n\023AddOfflineDepartMsg\022/.OfflineMessagePr"
  "oto.addOfflineDepartMsgRequest\0320.Offline"
  "MessageProto.addOfflineDepartMsgResponse"
  "\022x\n\023DelOfflineDepartMsg\022/.OfflineMessage"
  "Proto.delOfflineDepartMsgRequest\0320.Offli"
  "neMessageProto.delOfflineDepartMsgRespon"
  "se\022~\n\025QueryOfflineDepartMsg\0221.OfflineMes"
  "sageProto.queryOfflineDepartMsgRequest\0322"
  ".OfflineMessageProto.queryOfflineDepartM"
  "sgResponseB\003\200\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_offlinemessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_offlinemessage_2eproto_sccs[22] = {
  &scc_info_ResultCode_offlinemessage_2eproto.base,
  &scc_info_addOfflineDepartMsgRequest_offlinemessage_2eproto.base,
  &scc_info_addOfflineDepartMsgResponse_offlinemessage_2eproto.base,
  &scc_info_addOfflineGroupMsgRequest_offlinemessage_2eproto.base,
  &scc_info_addOfflineGroupMsgResponse_offlinemessage_2eproto.base,
  &scc_info_addOfflineMsgRequest_offlinemessage_2eproto.base,
  &scc_info_addOfflineMsgResponse_offlinemessage_2eproto.base,
  &scc_info_delOfflineDepartMsgRequest_offlinemessage_2eproto.base,
  &scc_info_delOfflineDepartMsgResponse_offlinemessage_2eproto.base,
  &scc_info_delOfflineGroupMsgRequest_offlinemessage_2eproto.base,
  &scc_info_delOfflineGroupMsgResponse_offlinemessage_2eproto.base,
  &scc_info_delOfflineMsgRequest_offlinemessage_2eproto.base,
  &scc_info_delOfflineMsgResponse_offlinemessage_2eproto.base,
  &scc_info_departMsg_offlinemessage_2eproto.base,
  &scc_info_groupMsg_offlinemessage_2eproto.base,
  &scc_info_msg_offlinemessage_2eproto.base,
  &scc_info_queryOfflineDepartMsgRequest_offlinemessage_2eproto.base,
  &scc_info_queryOfflineDepartMsgResponse_offlinemessage_2eproto.base,
  &scc_info_queryOfflineGroupMsgRequest_offlinemessage_2eproto.base,
  &scc_info_queryOfflineGroupMsgResponse_offlinemessage_2eproto.base,
  &scc_info_queryOfflineMsgRequest_offlinemessage_2eproto.base,
  &scc_info_queryOfflineMsgResponse_offlinemessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_offlinemessage_2eproto_once;
static bool descriptor_table_offlinemessage_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_offlinemessage_2eproto = {
  &descriptor_table_offlinemessage_2eproto_initialized, descriptor_table_protodef_offlinemessage_2eproto, "offlinemessage.proto", 3063,
  &descriptor_table_offlinemessage_2eproto_once, descriptor_table_offlinemessage_2eproto_sccs, descriptor_table_offlinemessage_2eproto_deps, 22, 0,
  schemas, file_default_instances, TableStruct_offlinemessage_2eproto::offsets,
  file_level_metadata_offlinemessage_2eproto, 22, file_level_enum_descriptors_offlinemessage_2eproto, file_level_service_descriptors_offlinemessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_offlinemessage_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_offlinemessage_2eproto), true);
namespace OfflineMessageProto {

// ===================================================================

void ResultCode::InitAsDefaultInstance() {
}
class ResultCode::_Internal {
 public:
};

ResultCode::ResultCode()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.ResultCode)
}
ResultCode::ResultCode(const ResultCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errmsg().empty()) {
    errmsg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.ResultCode)
}

void ResultCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultCode_offlinemessage_2eproto.base);
  errmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

ResultCode::~ResultCode() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.ResultCode)
  SharedDtor();
}

void ResultCode::SharedDtor() {
  errmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResultCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultCode& ResultCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultCode_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void ResultCode::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.ResultCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

const char* ResultCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes errmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.ResultCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errcode = 1;
  if (this->errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_errcode(), target);
  }

  // bytes errmsg = 2;
  if (this->errmsg().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_errmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.ResultCode)
  return target;
}

size_t ResultCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.ResultCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errmsg());
  }

  // int32 errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_errcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.ResultCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.ResultCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.ResultCode)
    MergeFrom(*source);
  }
}

void ResultCode::MergeFrom(const ResultCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.ResultCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.errcode() != 0) {
    _internal_set_errcode(from._internal_errcode());
  }
}

void ResultCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.ResultCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultCode::CopyFrom(const ResultCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.ResultCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultCode::IsInitialized() const {
  return true;
}

void ResultCode::InternalSwap(ResultCode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errmsg_.Swap(&other->errmsg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void msg::InitAsDefaultInstance() {
}
class msg::_Internal {
 public:
};

msg::msg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.msg)
}
msg::msg(const msg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recvname().empty()) {
    recvname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.recvname_);
  }
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sendname().empty()) {
    sendname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sendname_);
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.msg)
}

void msg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_msg_offlinemessage_2eproto.base);
  recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0;
}

msg::~msg() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.msg)
  SharedDtor();
}

void msg::SharedDtor() {
  recvname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const msg& msg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_msg_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void msg::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0;
  _internal_metadata_.Clear();
}

const char* msg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 msgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes recvname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recvname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes sendname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* msg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgid = 1;
  if (this->msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgid(), target);
  }

  // bytes recvname = 2;
  if (this->recvname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_recvname(), target);
  }

  // bytes sendname = 3;
  if (this->sendname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sendname(), target);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.msg)
  return target;
}

size_t msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.msg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes recvname = 2;
  if (this->recvname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_recvname());
  }

  // bytes sendname = 3;
  if (this->sendname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sendname());
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_msgid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.msg)
  GOOGLE_DCHECK_NE(&from, this);
  const msg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<msg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.msg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.msg)
    MergeFrom(*source);
  }
}

void msg::MergeFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recvname().size() > 0) {

    recvname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.recvname_);
  }
  if (from.sendname().size() > 0) {

    sendname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sendname_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.msgid() != 0) {
    _internal_set_msgid(from._internal_msgid());
  }
}

void msg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg::CopyFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg::IsInitialized() const {
  return true;
}

void msg::InternalSwap(msg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  recvname_.Swap(&other->recvname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendname_.Swap(&other->sendname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata msg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void addOfflineMsgRequest::InitAsDefaultInstance() {
  ::OfflineMessageProto::_addOfflineMsgRequest_default_instance_._instance.get_mutable()->offlinemsg_ = const_cast< ::OfflineMessageProto::msg*>(
      ::OfflineMessageProto::msg::internal_default_instance());
}
class addOfflineMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::msg& offlinemsg(const addOfflineMsgRequest* msg);
};

const ::OfflineMessageProto::msg&
addOfflineMsgRequest::_Internal::offlinemsg(const addOfflineMsgRequest* msg) {
  return *msg->offlinemsg_;
}
addOfflineMsgRequest::addOfflineMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.addOfflineMsgRequest)
}
addOfflineMsgRequest::addOfflineMsgRequest(const addOfflineMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_offlinemsg()) {
    offlinemsg_ = new ::OfflineMessageProto::msg(*from.offlinemsg_);
  } else {
    offlinemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineMsgRequest)
}

void addOfflineMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_addOfflineMsgRequest_offlinemessage_2eproto.base);
  offlinemsg_ = nullptr;
}

addOfflineMsgRequest::~addOfflineMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineMsgRequest)
  SharedDtor();
}

void addOfflineMsgRequest::SharedDtor() {
  if (this != internal_default_instance()) delete offlinemsg_;
}

void addOfflineMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const addOfflineMsgRequest& addOfflineMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_addOfflineMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void addOfflineMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && offlinemsg_ != nullptr) {
    delete offlinemsg_;
  }
  offlinemsg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* addOfflineMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.msg OfflineMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinemsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addOfflineMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->has_offlinemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineMsgRequest)
  return target;
}

size_t addOfflineMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->has_offlinemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinemsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addOfflineMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.addOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const addOfflineMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addOfflineMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.addOfflineMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.addOfflineMsgRequest)
    MergeFrom(*source);
  }
}

void addOfflineMsgRequest::MergeFrom(const addOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offlinemsg()) {
    _internal_mutable_offlinemsg()->::OfflineMessageProto::msg::MergeFrom(from._internal_offlinemsg());
  }
}

void addOfflineMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.addOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addOfflineMsgRequest::CopyFrom(const addOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineMsgRequest::IsInitialized() const {
  return true;
}

void addOfflineMsgRequest::InternalSwap(addOfflineMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(offlinemsg_, other->offlinemsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void addOfflineMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_addOfflineMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class addOfflineMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const addOfflineMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
addOfflineMsgResponse::_Internal::result(const addOfflineMsgResponse* msg) {
  return *msg->result_;
}
addOfflineMsgResponse::addOfflineMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.addOfflineMsgResponse)
}
addOfflineMsgResponse::addOfflineMsgResponse(const addOfflineMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineMsgResponse)
}

void addOfflineMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_addOfflineMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

addOfflineMsgResponse::~addOfflineMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineMsgResponse)
  SharedDtor();
}

void addOfflineMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void addOfflineMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const addOfflineMsgResponse& addOfflineMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_addOfflineMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void addOfflineMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* addOfflineMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addOfflineMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineMsgResponse)
  return target;
}

size_t addOfflineMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addOfflineMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.addOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const addOfflineMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addOfflineMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.addOfflineMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.addOfflineMsgResponse)
    MergeFrom(*source);
  }
}

void addOfflineMsgResponse::MergeFrom(const addOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void addOfflineMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.addOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addOfflineMsgResponse::CopyFrom(const addOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineMsgResponse::IsInitialized() const {
  return true;
}

void addOfflineMsgResponse::InternalSwap(addOfflineMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delOfflineMsgRequest::InitAsDefaultInstance() {
  ::OfflineMessageProto::_delOfflineMsgRequest_default_instance_._instance.get_mutable()->offlinemsg_ = const_cast< ::OfflineMessageProto::msg*>(
      ::OfflineMessageProto::msg::internal_default_instance());
}
class delOfflineMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::msg& offlinemsg(const delOfflineMsgRequest* msg);
};

const ::OfflineMessageProto::msg&
delOfflineMsgRequest::_Internal::offlinemsg(const delOfflineMsgRequest* msg) {
  return *msg->offlinemsg_;
}
delOfflineMsgRequest::delOfflineMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.delOfflineMsgRequest)
}
delOfflineMsgRequest::delOfflineMsgRequest(const delOfflineMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_offlinemsg()) {
    offlinemsg_ = new ::OfflineMessageProto::msg(*from.offlinemsg_);
  } else {
    offlinemsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineMsgRequest)
}

void delOfflineMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delOfflineMsgRequest_offlinemessage_2eproto.base);
  offlinemsg_ = nullptr;
}

delOfflineMsgRequest::~delOfflineMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineMsgRequest)
  SharedDtor();
}

void delOfflineMsgRequest::SharedDtor() {
  if (this != internal_default_instance()) delete offlinemsg_;
}

void delOfflineMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delOfflineMsgRequest& delOfflineMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delOfflineMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void delOfflineMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && offlinemsg_ != nullptr) {
    delete offlinemsg_;
  }
  offlinemsg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* delOfflineMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.msg OfflineMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinemsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delOfflineMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->has_offlinemsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinemsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineMsgRequest)
  return target;
}

size_t delOfflineMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.msg OfflineMsg = 1;
  if (this->has_offlinemsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinemsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delOfflineMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.delOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const delOfflineMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delOfflineMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.delOfflineMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.delOfflineMsgRequest)
    MergeFrom(*source);
  }
}

void delOfflineMsgRequest::MergeFrom(const delOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offlinemsg()) {
    _internal_mutable_offlinemsg()->::OfflineMessageProto::msg::MergeFrom(from._internal_offlinemsg());
  }
}

void delOfflineMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.delOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delOfflineMsgRequest::CopyFrom(const delOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineMsgRequest::IsInitialized() const {
  return true;
}

void delOfflineMsgRequest::InternalSwap(delOfflineMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(offlinemsg_, other->offlinemsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delOfflineMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_delOfflineMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class delOfflineMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const delOfflineMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
delOfflineMsgResponse::_Internal::result(const delOfflineMsgResponse* msg) {
  return *msg->result_;
}
delOfflineMsgResponse::delOfflineMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.delOfflineMsgResponse)
}
delOfflineMsgResponse::delOfflineMsgResponse(const delOfflineMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineMsgResponse)
}

void delOfflineMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delOfflineMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

delOfflineMsgResponse::~delOfflineMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineMsgResponse)
  SharedDtor();
}

void delOfflineMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void delOfflineMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delOfflineMsgResponse& delOfflineMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delOfflineMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void delOfflineMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* delOfflineMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delOfflineMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineMsgResponse)
  return target;
}

size_t delOfflineMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delOfflineMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.delOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const delOfflineMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delOfflineMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.delOfflineMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.delOfflineMsgResponse)
    MergeFrom(*source);
  }
}

void delOfflineMsgResponse::MergeFrom(const delOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void delOfflineMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.delOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delOfflineMsgResponse::CopyFrom(const delOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineMsgResponse::IsInitialized() const {
  return true;
}

void delOfflineMsgResponse::InternalSwap(delOfflineMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void queryOfflineMsgRequest::InitAsDefaultInstance() {
}
class queryOfflineMsgRequest::_Internal {
 public:
};

queryOfflineMsgRequest::queryOfflineMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.queryOfflineMsgRequest)
}
queryOfflineMsgRequest::queryOfflineMsgRequest(const queryOfflineMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recvname().empty()) {
    recvname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.recvname_);
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineMsgRequest)
}

void queryOfflineMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_queryOfflineMsgRequest_offlinemessage_2eproto.base);
  recvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

queryOfflineMsgRequest::~queryOfflineMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineMsgRequest)
  SharedDtor();
}

void queryOfflineMsgRequest::SharedDtor() {
  recvname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void queryOfflineMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const queryOfflineMsgRequest& queryOfflineMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_queryOfflineMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void queryOfflineMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recvname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* queryOfflineMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes recvname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recvname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* queryOfflineMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes recvname = 1;
  if (this->recvname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_recvname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineMsgRequest)
  return target;
}

size_t queryOfflineMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes recvname = 1;
  if (this->recvname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_recvname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void queryOfflineMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.queryOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const queryOfflineMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<queryOfflineMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.queryOfflineMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.queryOfflineMsgRequest)
    MergeFrom(*source);
  }
}

void queryOfflineMsgRequest::MergeFrom(const queryOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recvname().size() > 0) {

    recvname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.recvname_);
  }
}

void queryOfflineMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.queryOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryOfflineMsgRequest::CopyFrom(const queryOfflineMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineMsgRequest::IsInitialized() const {
  return true;
}

void queryOfflineMsgRequest::InternalSwap(queryOfflineMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  recvname_.Swap(&other->recvname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void queryOfflineMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_queryOfflineMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class queryOfflineMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const queryOfflineMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
queryOfflineMsgResponse::_Internal::result(const queryOfflineMsgResponse* msg) {
  return *msg->result_;
}
queryOfflineMsgResponse::queryOfflineMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.queryOfflineMsgResponse)
}
queryOfflineMsgResponse::queryOfflineMsgResponse(const queryOfflineMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      offlinemsg_(from.offlinemsg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineMsgResponse)
}

void queryOfflineMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_queryOfflineMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

queryOfflineMsgResponse::~queryOfflineMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineMsgResponse)
  SharedDtor();
}

void queryOfflineMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void queryOfflineMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const queryOfflineMsgResponse& queryOfflineMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_queryOfflineMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void queryOfflineMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinemsg_.Clear();
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* queryOfflineMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .OfflineMessageProto.msg OfflineMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_offlinemsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .OfflineMessageProto.ResultCode result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* queryOfflineMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.msg OfflineMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_offlinemsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_offlinemsg(i), target, stream);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  // bool success = 3;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineMsgResponse)
  return target;
}

size_t queryOfflineMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.msg OfflineMsg = 1;
  total_size += 1UL * this->_internal_offlinemsg_size();
  for (const auto& msg : this->offlinemsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 3;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void queryOfflineMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.queryOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const queryOfflineMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<queryOfflineMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.queryOfflineMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.queryOfflineMsgResponse)
    MergeFrom(*source);
  }
}

void queryOfflineMsgResponse::MergeFrom(const queryOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  offlinemsg_.MergeFrom(from.offlinemsg_);
  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void queryOfflineMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.queryOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryOfflineMsgResponse::CopyFrom(const queryOfflineMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineMsgResponse::IsInitialized() const {
  return true;
}

void queryOfflineMsgResponse::InternalSwap(queryOfflineMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  offlinemsg_.InternalSwap(&other->offlinemsg_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void groupMsg::InitAsDefaultInstance() {
}
class groupMsg::_Internal {
 public:
};

groupMsg::groupMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.groupMsg)
}
groupMsg::groupMsg(const groupMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_groupname().empty()) {
    groupname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sendname().empty()) {
    sendname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sendname_);
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.groupMsg)
}

void groupMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_groupMsg_offlinemessage_2eproto.base);
  groupname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0;
}

groupMsg::~groupMsg() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.groupMsg)
  SharedDtor();
}

void groupMsg::SharedDtor() {
  groupname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void groupMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const groupMsg& groupMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_groupMsg_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void groupMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.groupMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0;
  _internal_metadata_.Clear();
}

const char* groupMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 msgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes groupname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_groupname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes sendname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* groupMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.groupMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgid = 1;
  if (this->msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgid(), target);
  }

  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_groupname(), target);
  }

  // bytes sendname = 3;
  if (this->sendname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sendname(), target);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.groupMsg)
  return target;
}

size_t groupMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.groupMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes groupname = 2;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_groupname());
  }

  // bytes sendname = 3;
  if (this->sendname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sendname());
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_msgid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void groupMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.groupMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const groupMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<groupMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.groupMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.groupMsg)
    MergeFrom(*source);
  }
}

void groupMsg::MergeFrom(const groupMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.groupMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  if (from.sendname().size() > 0) {

    sendname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sendname_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.msgid() != 0) {
    _internal_set_msgid(from._internal_msgid());
  }
}

void groupMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.groupMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void groupMsg::CopyFrom(const groupMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.groupMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool groupMsg::IsInitialized() const {
  return true;
}

void groupMsg::InternalSwap(groupMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  groupname_.Swap(&other->groupname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendname_.Swap(&other->sendname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata groupMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void addOfflineGroupMsgRequest::InitAsDefaultInstance() {
  ::OfflineMessageProto::_addOfflineGroupMsgRequest_default_instance_._instance.get_mutable()->offlinegroupmsg_ = const_cast< ::OfflineMessageProto::groupMsg*>(
      ::OfflineMessageProto::groupMsg::internal_default_instance());
}
class addOfflineGroupMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::groupMsg& offlinegroupmsg(const addOfflineGroupMsgRequest* msg);
};

const ::OfflineMessageProto::groupMsg&
addOfflineGroupMsgRequest::_Internal::offlinegroupmsg(const addOfflineGroupMsgRequest* msg) {
  return *msg->offlinegroupmsg_;
}
addOfflineGroupMsgRequest::addOfflineGroupMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.addOfflineGroupMsgRequest)
}
addOfflineGroupMsgRequest::addOfflineGroupMsgRequest(const addOfflineGroupMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_offlinegroupmsg()) {
    offlinegroupmsg_ = new ::OfflineMessageProto::groupMsg(*from.offlinegroupmsg_);
  } else {
    offlinegroupmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineGroupMsgRequest)
}

void addOfflineGroupMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_addOfflineGroupMsgRequest_offlinemessage_2eproto.base);
  offlinegroupmsg_ = nullptr;
}

addOfflineGroupMsgRequest::~addOfflineGroupMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineGroupMsgRequest)
  SharedDtor();
}

void addOfflineGroupMsgRequest::SharedDtor() {
  if (this != internal_default_instance()) delete offlinegroupmsg_;
}

void addOfflineGroupMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const addOfflineGroupMsgRequest& addOfflineGroupMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_addOfflineGroupMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void addOfflineGroupMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && offlinegroupmsg_ != nullptr) {
    delete offlinegroupmsg_;
  }
  offlinegroupmsg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* addOfflineGroupMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinegroupmsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addOfflineGroupMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->has_offlinegroupmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinegroupmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineGroupMsgRequest)
  return target;
}

size_t addOfflineGroupMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->has_offlinegroupmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinegroupmsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addOfflineGroupMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const addOfflineGroupMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addOfflineGroupMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.addOfflineGroupMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.addOfflineGroupMsgRequest)
    MergeFrom(*source);
  }
}

void addOfflineGroupMsgRequest::MergeFrom(const addOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offlinegroupmsg()) {
    _internal_mutable_offlinegroupmsg()->::OfflineMessageProto::groupMsg::MergeFrom(from._internal_offlinegroupmsg());
  }
}

void addOfflineGroupMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addOfflineGroupMsgRequest::CopyFrom(const addOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineGroupMsgRequest::IsInitialized() const {
  return true;
}

void addOfflineGroupMsgRequest::InternalSwap(addOfflineGroupMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(offlinegroupmsg_, other->offlinegroupmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineGroupMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void addOfflineGroupMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_addOfflineGroupMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class addOfflineGroupMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const addOfflineGroupMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
addOfflineGroupMsgResponse::_Internal::result(const addOfflineGroupMsgResponse* msg) {
  return *msg->result_;
}
addOfflineGroupMsgResponse::addOfflineGroupMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.addOfflineGroupMsgResponse)
}
addOfflineGroupMsgResponse::addOfflineGroupMsgResponse(const addOfflineGroupMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineGroupMsgResponse)
}

void addOfflineGroupMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_addOfflineGroupMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

addOfflineGroupMsgResponse::~addOfflineGroupMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineGroupMsgResponse)
  SharedDtor();
}

void addOfflineGroupMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void addOfflineGroupMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const addOfflineGroupMsgResponse& addOfflineGroupMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_addOfflineGroupMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void addOfflineGroupMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* addOfflineGroupMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addOfflineGroupMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineGroupMsgResponse)
  return target;
}

size_t addOfflineGroupMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addOfflineGroupMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const addOfflineGroupMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addOfflineGroupMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.addOfflineGroupMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.addOfflineGroupMsgResponse)
    MergeFrom(*source);
  }
}

void addOfflineGroupMsgResponse::MergeFrom(const addOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void addOfflineGroupMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addOfflineGroupMsgResponse::CopyFrom(const addOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineGroupMsgResponse::IsInitialized() const {
  return true;
}

void addOfflineGroupMsgResponse::InternalSwap(addOfflineGroupMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineGroupMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delOfflineGroupMsgRequest::InitAsDefaultInstance() {
  ::OfflineMessageProto::_delOfflineGroupMsgRequest_default_instance_._instance.get_mutable()->offlinegroupmsg_ = const_cast< ::OfflineMessageProto::groupMsg*>(
      ::OfflineMessageProto::groupMsg::internal_default_instance());
}
class delOfflineGroupMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::groupMsg& offlinegroupmsg(const delOfflineGroupMsgRequest* msg);
};

const ::OfflineMessageProto::groupMsg&
delOfflineGroupMsgRequest::_Internal::offlinegroupmsg(const delOfflineGroupMsgRequest* msg) {
  return *msg->offlinegroupmsg_;
}
delOfflineGroupMsgRequest::delOfflineGroupMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.delOfflineGroupMsgRequest)
}
delOfflineGroupMsgRequest::delOfflineGroupMsgRequest(const delOfflineGroupMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_offlinegroupmsg()) {
    offlinegroupmsg_ = new ::OfflineMessageProto::groupMsg(*from.offlinegroupmsg_);
  } else {
    offlinegroupmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineGroupMsgRequest)
}

void delOfflineGroupMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delOfflineGroupMsgRequest_offlinemessage_2eproto.base);
  offlinegroupmsg_ = nullptr;
}

delOfflineGroupMsgRequest::~delOfflineGroupMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineGroupMsgRequest)
  SharedDtor();
}

void delOfflineGroupMsgRequest::SharedDtor() {
  if (this != internal_default_instance()) delete offlinegroupmsg_;
}

void delOfflineGroupMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delOfflineGroupMsgRequest& delOfflineGroupMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delOfflineGroupMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void delOfflineGroupMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && offlinegroupmsg_ != nullptr) {
    delete offlinegroupmsg_;
  }
  offlinegroupmsg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* delOfflineGroupMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinegroupmsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delOfflineGroupMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->has_offlinegroupmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinegroupmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineGroupMsgRequest)
  return target;
}

size_t delOfflineGroupMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  if (this->has_offlinegroupmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinegroupmsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delOfflineGroupMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const delOfflineGroupMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delOfflineGroupMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.delOfflineGroupMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.delOfflineGroupMsgRequest)
    MergeFrom(*source);
  }
}

void delOfflineGroupMsgRequest::MergeFrom(const delOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offlinegroupmsg()) {
    _internal_mutable_offlinegroupmsg()->::OfflineMessageProto::groupMsg::MergeFrom(from._internal_offlinegroupmsg());
  }
}

void delOfflineGroupMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delOfflineGroupMsgRequest::CopyFrom(const delOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineGroupMsgRequest::IsInitialized() const {
  return true;
}

void delOfflineGroupMsgRequest::InternalSwap(delOfflineGroupMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(offlinegroupmsg_, other->offlinegroupmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineGroupMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delOfflineGroupMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_delOfflineGroupMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class delOfflineGroupMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const delOfflineGroupMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
delOfflineGroupMsgResponse::_Internal::result(const delOfflineGroupMsgResponse* msg) {
  return *msg->result_;
}
delOfflineGroupMsgResponse::delOfflineGroupMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.delOfflineGroupMsgResponse)
}
delOfflineGroupMsgResponse::delOfflineGroupMsgResponse(const delOfflineGroupMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineGroupMsgResponse)
}

void delOfflineGroupMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delOfflineGroupMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

delOfflineGroupMsgResponse::~delOfflineGroupMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineGroupMsgResponse)
  SharedDtor();
}

void delOfflineGroupMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void delOfflineGroupMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delOfflineGroupMsgResponse& delOfflineGroupMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delOfflineGroupMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void delOfflineGroupMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* delOfflineGroupMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delOfflineGroupMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineGroupMsgResponse)
  return target;
}

size_t delOfflineGroupMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delOfflineGroupMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const delOfflineGroupMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delOfflineGroupMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.delOfflineGroupMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.delOfflineGroupMsgResponse)
    MergeFrom(*source);
  }
}

void delOfflineGroupMsgResponse::MergeFrom(const delOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void delOfflineGroupMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delOfflineGroupMsgResponse::CopyFrom(const delOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineGroupMsgResponse::IsInitialized() const {
  return true;
}

void delOfflineGroupMsgResponse::InternalSwap(delOfflineGroupMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineGroupMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void queryOfflineGroupMsgRequest::InitAsDefaultInstance() {
}
class queryOfflineGroupMsgRequest::_Internal {
 public:
};

queryOfflineGroupMsgRequest::queryOfflineGroupMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.queryOfflineGroupMsgRequest)
}
queryOfflineGroupMsgRequest::queryOfflineGroupMsgRequest(const queryOfflineGroupMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineGroupMsgRequest)
}

void queryOfflineGroupMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_queryOfflineGroupMsgRequest_offlinemessage_2eproto.base);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

queryOfflineGroupMsgRequest::~queryOfflineGroupMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineGroupMsgRequest)
  SharedDtor();
}

void queryOfflineGroupMsgRequest::SharedDtor() {
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void queryOfflineGroupMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const queryOfflineGroupMsgRequest& queryOfflineGroupMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_queryOfflineGroupMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void queryOfflineGroupMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* queryOfflineGroupMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* queryOfflineGroupMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineGroupMsgRequest)
  return target;
}

size_t queryOfflineGroupMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_username());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void queryOfflineGroupMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const queryOfflineGroupMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<queryOfflineGroupMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.queryOfflineGroupMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.queryOfflineGroupMsgRequest)
    MergeFrom(*source);
  }
}

void queryOfflineGroupMsgRequest::MergeFrom(const queryOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void queryOfflineGroupMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryOfflineGroupMsgRequest::CopyFrom(const queryOfflineGroupMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineGroupMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineGroupMsgRequest::IsInitialized() const {
  return true;
}

void queryOfflineGroupMsgRequest::InternalSwap(queryOfflineGroupMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineGroupMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void queryOfflineGroupMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_queryOfflineGroupMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class queryOfflineGroupMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const queryOfflineGroupMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
queryOfflineGroupMsgResponse::_Internal::result(const queryOfflineGroupMsgResponse* msg) {
  return *msg->result_;
}
queryOfflineGroupMsgResponse::queryOfflineGroupMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.queryOfflineGroupMsgResponse)
}
queryOfflineGroupMsgResponse::queryOfflineGroupMsgResponse(const queryOfflineGroupMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      offlinegroupmsg_(from.offlinegroupmsg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineGroupMsgResponse)
}

void queryOfflineGroupMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_queryOfflineGroupMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

queryOfflineGroupMsgResponse::~queryOfflineGroupMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineGroupMsgResponse)
  SharedDtor();
}

void queryOfflineGroupMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void queryOfflineGroupMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const queryOfflineGroupMsgResponse& queryOfflineGroupMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_queryOfflineGroupMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void queryOfflineGroupMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinegroupmsg_.Clear();
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* queryOfflineGroupMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_offlinegroupmsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .OfflineMessageProto.ResultCode result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* queryOfflineGroupMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_offlinegroupmsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_offlinegroupmsg(i), target, stream);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  // bool success = 3;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineGroupMsgResponse)
  return target;
}

size_t queryOfflineGroupMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.groupMsg OfflineGroupMsg = 1;
  total_size += 1UL * this->_internal_offlinegroupmsg_size();
  for (const auto& msg : this->offlinegroupmsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 3;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void queryOfflineGroupMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const queryOfflineGroupMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<queryOfflineGroupMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.queryOfflineGroupMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.queryOfflineGroupMsgResponse)
    MergeFrom(*source);
  }
}

void queryOfflineGroupMsgResponse::MergeFrom(const queryOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  offlinegroupmsg_.MergeFrom(from.offlinegroupmsg_);
  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void queryOfflineGroupMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryOfflineGroupMsgResponse::CopyFrom(const queryOfflineGroupMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineGroupMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineGroupMsgResponse::IsInitialized() const {
  return true;
}

void queryOfflineGroupMsgResponse::InternalSwap(queryOfflineGroupMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  offlinegroupmsg_.InternalSwap(&other->offlinegroupmsg_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineGroupMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void departMsg::InitAsDefaultInstance() {
}
class departMsg::_Internal {
 public:
};

departMsg::departMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.departMsg)
}
departMsg::departMsg(const departMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  departname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_departname().empty()) {
    departname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.departname_);
  }
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sendname().empty()) {
    sendname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sendname_);
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.departMsg)
}

void departMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_departMsg_offlinemessage_2eproto.base);
  departname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0;
}

departMsg::~departMsg() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.departMsg)
  SharedDtor();
}

void departMsg::SharedDtor() {
  departname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void departMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const departMsg& departMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_departMsg_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void departMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.departMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0;
  _internal_metadata_.Clear();
}

const char* departMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 msgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes departname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_departname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes sendname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* departMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.departMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msgid = 1;
  if (this->msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_msgid(), target);
  }

  // bytes departname = 2;
  if (this->departname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_departname(), target);
  }

  // bytes sendname = 3;
  if (this->sendname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sendname(), target);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.departMsg)
  return target;
}

size_t departMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.departMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes departname = 2;
  if (this->departname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_departname());
  }

  // bytes sendname = 3;
  if (this->sendname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sendname());
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_msgid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void departMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.departMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const departMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<departMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.departMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.departMsg)
    MergeFrom(*source);
  }
}

void departMsg::MergeFrom(const departMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.departMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.departname().size() > 0) {

    departname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.departname_);
  }
  if (from.sendname().size() > 0) {

    sendname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sendname_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.msgid() != 0) {
    _internal_set_msgid(from._internal_msgid());
  }
}

void departMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.departMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void departMsg::CopyFrom(const departMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.departMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool departMsg::IsInitialized() const {
  return true;
}

void departMsg::InternalSwap(departMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  departname_.Swap(&other->departname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendname_.Swap(&other->sendname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata departMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void addOfflineDepartMsgRequest::InitAsDefaultInstance() {
  ::OfflineMessageProto::_addOfflineDepartMsgRequest_default_instance_._instance.get_mutable()->offlinedepartmsg_ = const_cast< ::OfflineMessageProto::departMsg*>(
      ::OfflineMessageProto::departMsg::internal_default_instance());
}
class addOfflineDepartMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::departMsg& offlinedepartmsg(const addOfflineDepartMsgRequest* msg);
};

const ::OfflineMessageProto::departMsg&
addOfflineDepartMsgRequest::_Internal::offlinedepartmsg(const addOfflineDepartMsgRequest* msg) {
  return *msg->offlinedepartmsg_;
}
addOfflineDepartMsgRequest::addOfflineDepartMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.addOfflineDepartMsgRequest)
}
addOfflineDepartMsgRequest::addOfflineDepartMsgRequest(const addOfflineDepartMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_offlinedepartmsg()) {
    offlinedepartmsg_ = new ::OfflineMessageProto::departMsg(*from.offlinedepartmsg_);
  } else {
    offlinedepartmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineDepartMsgRequest)
}

void addOfflineDepartMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_addOfflineDepartMsgRequest_offlinemessage_2eproto.base);
  offlinedepartmsg_ = nullptr;
}

addOfflineDepartMsgRequest::~addOfflineDepartMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineDepartMsgRequest)
  SharedDtor();
}

void addOfflineDepartMsgRequest::SharedDtor() {
  if (this != internal_default_instance()) delete offlinedepartmsg_;
}

void addOfflineDepartMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const addOfflineDepartMsgRequest& addOfflineDepartMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_addOfflineDepartMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void addOfflineDepartMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && offlinedepartmsg_ != nullptr) {
    delete offlinedepartmsg_;
  }
  offlinedepartmsg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* addOfflineDepartMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinedepartmsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addOfflineDepartMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->has_offlinedepartmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinedepartmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineDepartMsgRequest)
  return target;
}

size_t addOfflineDepartMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->has_offlinedepartmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinedepartmsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addOfflineDepartMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const addOfflineDepartMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addOfflineDepartMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.addOfflineDepartMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.addOfflineDepartMsgRequest)
    MergeFrom(*source);
  }
}

void addOfflineDepartMsgRequest::MergeFrom(const addOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offlinedepartmsg()) {
    _internal_mutable_offlinedepartmsg()->::OfflineMessageProto::departMsg::MergeFrom(from._internal_offlinedepartmsg());
  }
}

void addOfflineDepartMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addOfflineDepartMsgRequest::CopyFrom(const addOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineDepartMsgRequest::IsInitialized() const {
  return true;
}

void addOfflineDepartMsgRequest::InternalSwap(addOfflineDepartMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(offlinedepartmsg_, other->offlinedepartmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineDepartMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void addOfflineDepartMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_addOfflineDepartMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class addOfflineDepartMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const addOfflineDepartMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
addOfflineDepartMsgResponse::_Internal::result(const addOfflineDepartMsgResponse* msg) {
  return *msg->result_;
}
addOfflineDepartMsgResponse::addOfflineDepartMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.addOfflineDepartMsgResponse)
}
addOfflineDepartMsgResponse::addOfflineDepartMsgResponse(const addOfflineDepartMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.addOfflineDepartMsgResponse)
}

void addOfflineDepartMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_addOfflineDepartMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

addOfflineDepartMsgResponse::~addOfflineDepartMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.addOfflineDepartMsgResponse)
  SharedDtor();
}

void addOfflineDepartMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void addOfflineDepartMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const addOfflineDepartMsgResponse& addOfflineDepartMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_addOfflineDepartMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void addOfflineDepartMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* addOfflineDepartMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addOfflineDepartMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.addOfflineDepartMsgResponse)
  return target;
}

size_t addOfflineDepartMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addOfflineDepartMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const addOfflineDepartMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addOfflineDepartMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.addOfflineDepartMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.addOfflineDepartMsgResponse)
    MergeFrom(*source);
  }
}

void addOfflineDepartMsgResponse::MergeFrom(const addOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void addOfflineDepartMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addOfflineDepartMsgResponse::CopyFrom(const addOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.addOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addOfflineDepartMsgResponse::IsInitialized() const {
  return true;
}

void addOfflineDepartMsgResponse::InternalSwap(addOfflineDepartMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addOfflineDepartMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delOfflineDepartMsgRequest::InitAsDefaultInstance() {
  ::OfflineMessageProto::_delOfflineDepartMsgRequest_default_instance_._instance.get_mutable()->offlinedepartmsg_ = const_cast< ::OfflineMessageProto::departMsg*>(
      ::OfflineMessageProto::departMsg::internal_default_instance());
}
class delOfflineDepartMsgRequest::_Internal {
 public:
  static const ::OfflineMessageProto::departMsg& offlinedepartmsg(const delOfflineDepartMsgRequest* msg);
};

const ::OfflineMessageProto::departMsg&
delOfflineDepartMsgRequest::_Internal::offlinedepartmsg(const delOfflineDepartMsgRequest* msg) {
  return *msg->offlinedepartmsg_;
}
delOfflineDepartMsgRequest::delOfflineDepartMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.delOfflineDepartMsgRequest)
}
delOfflineDepartMsgRequest::delOfflineDepartMsgRequest(const delOfflineDepartMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_offlinedepartmsg()) {
    offlinedepartmsg_ = new ::OfflineMessageProto::departMsg(*from.offlinedepartmsg_);
  } else {
    offlinedepartmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineDepartMsgRequest)
}

void delOfflineDepartMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delOfflineDepartMsgRequest_offlinemessage_2eproto.base);
  offlinedepartmsg_ = nullptr;
}

delOfflineDepartMsgRequest::~delOfflineDepartMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineDepartMsgRequest)
  SharedDtor();
}

void delOfflineDepartMsgRequest::SharedDtor() {
  if (this != internal_default_instance()) delete offlinedepartmsg_;
}

void delOfflineDepartMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delOfflineDepartMsgRequest& delOfflineDepartMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delOfflineDepartMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void delOfflineDepartMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && offlinedepartmsg_ != nullptr) {
    delete offlinedepartmsg_;
  }
  offlinedepartmsg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* delOfflineDepartMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offlinedepartmsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delOfflineDepartMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->has_offlinedepartmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::offlinedepartmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineDepartMsgRequest)
  return target;
}

size_t delOfflineDepartMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  if (this->has_offlinedepartmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *offlinedepartmsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delOfflineDepartMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const delOfflineDepartMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delOfflineDepartMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.delOfflineDepartMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.delOfflineDepartMsgRequest)
    MergeFrom(*source);
  }
}

void delOfflineDepartMsgRequest::MergeFrom(const delOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_offlinedepartmsg()) {
    _internal_mutable_offlinedepartmsg()->::OfflineMessageProto::departMsg::MergeFrom(from._internal_offlinedepartmsg());
  }
}

void delOfflineDepartMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delOfflineDepartMsgRequest::CopyFrom(const delOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineDepartMsgRequest::IsInitialized() const {
  return true;
}

void delOfflineDepartMsgRequest::InternalSwap(delOfflineDepartMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(offlinedepartmsg_, other->offlinedepartmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineDepartMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delOfflineDepartMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_delOfflineDepartMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class delOfflineDepartMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const delOfflineDepartMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
delOfflineDepartMsgResponse::_Internal::result(const delOfflineDepartMsgResponse* msg) {
  return *msg->result_;
}
delOfflineDepartMsgResponse::delOfflineDepartMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.delOfflineDepartMsgResponse)
}
delOfflineDepartMsgResponse::delOfflineDepartMsgResponse(const delOfflineDepartMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.delOfflineDepartMsgResponse)
}

void delOfflineDepartMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delOfflineDepartMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

delOfflineDepartMsgResponse::~delOfflineDepartMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.delOfflineDepartMsgResponse)
  SharedDtor();
}

void delOfflineDepartMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void delOfflineDepartMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delOfflineDepartMsgResponse& delOfflineDepartMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delOfflineDepartMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void delOfflineDepartMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* delOfflineDepartMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .OfflineMessageProto.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delOfflineDepartMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.delOfflineDepartMsgResponse)
  return target;
}

size_t delOfflineDepartMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .OfflineMessageProto.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delOfflineDepartMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const delOfflineDepartMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delOfflineDepartMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.delOfflineDepartMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.delOfflineDepartMsgResponse)
    MergeFrom(*source);
  }
}

void delOfflineDepartMsgResponse::MergeFrom(const delOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void delOfflineDepartMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delOfflineDepartMsgResponse::CopyFrom(const delOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.delOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delOfflineDepartMsgResponse::IsInitialized() const {
  return true;
}

void delOfflineDepartMsgResponse::InternalSwap(delOfflineDepartMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delOfflineDepartMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void queryOfflineDepartMsgRequest::InitAsDefaultInstance() {
}
class queryOfflineDepartMsgRequest::_Internal {
 public:
};

queryOfflineDepartMsgRequest::queryOfflineDepartMsgRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.queryOfflineDepartMsgRequest)
}
queryOfflineDepartMsgRequest::queryOfflineDepartMsgRequest(const queryOfflineDepartMsgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineDepartMsgRequest)
}

void queryOfflineDepartMsgRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_queryOfflineDepartMsgRequest_offlinemessage_2eproto.base);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

queryOfflineDepartMsgRequest::~queryOfflineDepartMsgRequest() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineDepartMsgRequest)
  SharedDtor();
}

void queryOfflineDepartMsgRequest::SharedDtor() {
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void queryOfflineDepartMsgRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const queryOfflineDepartMsgRequest& queryOfflineDepartMsgRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_queryOfflineDepartMsgRequest_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void queryOfflineDepartMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* queryOfflineDepartMsgRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* queryOfflineDepartMsgRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineDepartMsgRequest)
  return target;
}

size_t queryOfflineDepartMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_username());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void queryOfflineDepartMsgRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const queryOfflineDepartMsgRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<queryOfflineDepartMsgRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.queryOfflineDepartMsgRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.queryOfflineDepartMsgRequest)
    MergeFrom(*source);
  }
}

void queryOfflineDepartMsgRequest::MergeFrom(const queryOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void queryOfflineDepartMsgRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryOfflineDepartMsgRequest::CopyFrom(const queryOfflineDepartMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineDepartMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineDepartMsgRequest::IsInitialized() const {
  return true;
}

void queryOfflineDepartMsgRequest::InternalSwap(queryOfflineDepartMsgRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineDepartMsgRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void queryOfflineDepartMsgResponse::InitAsDefaultInstance() {
  ::OfflineMessageProto::_queryOfflineDepartMsgResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::OfflineMessageProto::ResultCode*>(
      ::OfflineMessageProto::ResultCode::internal_default_instance());
}
class queryOfflineDepartMsgResponse::_Internal {
 public:
  static const ::OfflineMessageProto::ResultCode& result(const queryOfflineDepartMsgResponse* msg);
};

const ::OfflineMessageProto::ResultCode&
queryOfflineDepartMsgResponse::_Internal::result(const queryOfflineDepartMsgResponse* msg) {
  return *msg->result_;
}
queryOfflineDepartMsgResponse::queryOfflineDepartMsgResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfflineMessageProto.queryOfflineDepartMsgResponse)
}
queryOfflineDepartMsgResponse::queryOfflineDepartMsgResponse(const queryOfflineDepartMsgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      offlinedepartmsg_(from.offlinedepartmsg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::OfflineMessageProto::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:OfflineMessageProto.queryOfflineDepartMsgResponse)
}

void queryOfflineDepartMsgResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_queryOfflineDepartMsgResponse_offlinemessage_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&result_)) + sizeof(success_));
}

queryOfflineDepartMsgResponse::~queryOfflineDepartMsgResponse() {
  // @@protoc_insertion_point(destructor:OfflineMessageProto.queryOfflineDepartMsgResponse)
  SharedDtor();
}

void queryOfflineDepartMsgResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void queryOfflineDepartMsgResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const queryOfflineDepartMsgResponse& queryOfflineDepartMsgResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_queryOfflineDepartMsgResponse_offlinemessage_2eproto.base);
  return *internal_default_instance();
}


void queryOfflineDepartMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinedepartmsg_.Clear();
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

const char* queryOfflineDepartMsgResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_offlinedepartmsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .OfflineMessageProto.ResultCode result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* queryOfflineDepartMsgResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_offlinedepartmsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_offlinedepartmsg(i), target, stream);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  // bool success = 3;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OfflineMessageProto.queryOfflineDepartMsgResponse)
  return target;
}

size_t queryOfflineDepartMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OfflineMessageProto.departMsg OfflineDepartMsg = 1;
  total_size += 1UL * this->_internal_offlinedepartmsg_size();
  for (const auto& msg : this->offlinedepartmsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .OfflineMessageProto.ResultCode result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // bool success = 3;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void queryOfflineDepartMsgResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const queryOfflineDepartMsgResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<queryOfflineDepartMsgResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfflineMessageProto.queryOfflineDepartMsgResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfflineMessageProto.queryOfflineDepartMsgResponse)
    MergeFrom(*source);
  }
}

void queryOfflineDepartMsgResponse::MergeFrom(const queryOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  offlinedepartmsg_.MergeFrom(from.offlinedepartmsg_);
  if (from.has_result()) {
    _internal_mutable_result()->::OfflineMessageProto::ResultCode::MergeFrom(from._internal_result());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void queryOfflineDepartMsgResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void queryOfflineDepartMsgResponse::CopyFrom(const queryOfflineDepartMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfflineMessageProto.queryOfflineDepartMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryOfflineDepartMsgResponse::IsInitialized() const {
  return true;
}

void queryOfflineDepartMsgResponse::InternalSwap(queryOfflineDepartMsgResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  offlinedepartmsg_.InternalSwap(&other->offlinedepartmsg_);
  swap(result_, other->result_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata queryOfflineDepartMsgResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

offlineMsgRpc::~offlineMsgRpc() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* offlineMsgRpc::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_offlinemessage_2eproto);
  return file_level_service_descriptors_offlinemessage_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* offlineMsgRpc::GetDescriptor() {
  return descriptor();
}

void offlineMsgRpc::AddOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::addOfflineMsgRequest*,
                         ::OfflineMessageProto::addOfflineMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddOfflineMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::DelOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::delOfflineMsgRequest*,
                         ::OfflineMessageProto::delOfflineMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOfflineMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::QueryOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::queryOfflineMsgRequest*,
                         ::OfflineMessageProto::queryOfflineMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryOfflineMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::AddOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::addOfflineGroupMsgRequest*,
                         ::OfflineMessageProto::addOfflineGroupMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddOfflineGroupMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::DelOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::delOfflineGroupMsgRequest*,
                         ::OfflineMessageProto::delOfflineGroupMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOfflineGroupMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::QueryOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::queryOfflineGroupMsgRequest*,
                         ::OfflineMessageProto::queryOfflineGroupMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryOfflineGroupMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::AddOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::addOfflineDepartMsgRequest*,
                         ::OfflineMessageProto::addOfflineDepartMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddOfflineDepartMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::DelOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::delOfflineDepartMsgRequest*,
                         ::OfflineMessageProto::delOfflineDepartMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOfflineDepartMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::QueryOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::OfflineMessageProto::queryOfflineDepartMsgRequest*,
                         ::OfflineMessageProto::queryOfflineDepartMsgResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method QueryOfflineDepartMsg() not implemented.");
  done->Run();
}

void offlineMsgRpc::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_offlinemessage_2eproto[0]);
  switch(method->index()) {
    case 0:
      AddOfflineMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::addOfflineMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::addOfflineMsgResponse*>(
                 response),
             done);
      break;
    case 1:
      DelOfflineMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::delOfflineMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::delOfflineMsgResponse*>(
                 response),
             done);
      break;
    case 2:
      QueryOfflineMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::queryOfflineMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::queryOfflineMsgResponse*>(
                 response),
             done);
      break;
    case 3:
      AddOfflineGroupMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::addOfflineGroupMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::addOfflineGroupMsgResponse*>(
                 response),
             done);
      break;
    case 4:
      DelOfflineGroupMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::delOfflineGroupMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::delOfflineGroupMsgResponse*>(
                 response),
             done);
      break;
    case 5:
      QueryOfflineGroupMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::queryOfflineGroupMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::queryOfflineGroupMsgResponse*>(
                 response),
             done);
      break;
    case 6:
      AddOfflineDepartMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::addOfflineDepartMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::addOfflineDepartMsgResponse*>(
                 response),
             done);
      break;
    case 7:
      DelOfflineDepartMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::delOfflineDepartMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::delOfflineDepartMsgResponse*>(
                 response),
             done);
      break;
    case 8:
      QueryOfflineDepartMsg(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::OfflineMessageProto::queryOfflineDepartMsgRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::OfflineMessageProto::queryOfflineDepartMsgResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& offlineMsgRpc::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::OfflineMessageProto::addOfflineMsgRequest::default_instance();
    case 1:
      return ::OfflineMessageProto::delOfflineMsgRequest::default_instance();
    case 2:
      return ::OfflineMessageProto::queryOfflineMsgRequest::default_instance();
    case 3:
      return ::OfflineMessageProto::addOfflineGroupMsgRequest::default_instance();
    case 4:
      return ::OfflineMessageProto::delOfflineGroupMsgRequest::default_instance();
    case 5:
      return ::OfflineMessageProto::queryOfflineGroupMsgRequest::default_instance();
    case 6:
      return ::OfflineMessageProto::addOfflineDepartMsgRequest::default_instance();
    case 7:
      return ::OfflineMessageProto::delOfflineDepartMsgRequest::default_instance();
    case 8:
      return ::OfflineMessageProto::queryOfflineDepartMsgRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& offlineMsgRpc::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::OfflineMessageProto::addOfflineMsgResponse::default_instance();
    case 1:
      return ::OfflineMessageProto::delOfflineMsgResponse::default_instance();
    case 2:
      return ::OfflineMessageProto::queryOfflineMsgResponse::default_instance();
    case 3:
      return ::OfflineMessageProto::addOfflineGroupMsgResponse::default_instance();
    case 4:
      return ::OfflineMessageProto::delOfflineGroupMsgResponse::default_instance();
    case 5:
      return ::OfflineMessageProto::queryOfflineGroupMsgResponse::default_instance();
    case 6:
      return ::OfflineMessageProto::addOfflineDepartMsgResponse::default_instance();
    case 7:
      return ::OfflineMessageProto::delOfflineDepartMsgResponse::default_instance();
    case 8:
      return ::OfflineMessageProto::queryOfflineDepartMsgResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

offlineMsgRpc_Stub::offlineMsgRpc_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
offlineMsgRpc_Stub::offlineMsgRpc_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
offlineMsgRpc_Stub::~offlineMsgRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void offlineMsgRpc_Stub::AddOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::addOfflineMsgRequest* request,
                              ::OfflineMessageProto::addOfflineMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::DelOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::delOfflineMsgRequest* request,
                              ::OfflineMessageProto::delOfflineMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::QueryOfflineMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::queryOfflineMsgRequest* request,
                              ::OfflineMessageProto::queryOfflineMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::AddOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::addOfflineGroupMsgRequest* request,
                              ::OfflineMessageProto::addOfflineGroupMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::DelOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::delOfflineGroupMsgRequest* request,
                              ::OfflineMessageProto::delOfflineGroupMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::QueryOfflineGroupMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::queryOfflineGroupMsgRequest* request,
                              ::OfflineMessageProto::queryOfflineGroupMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::AddOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::addOfflineDepartMsgRequest* request,
                              ::OfflineMessageProto::addOfflineDepartMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::DelOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::delOfflineDepartMsgRequest* request,
                              ::OfflineMessageProto::delOfflineDepartMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void offlineMsgRpc_Stub::QueryOfflineDepartMsg(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::OfflineMessageProto::queryOfflineDepartMsgRequest* request,
                              ::OfflineMessageProto::queryOfflineDepartMsgResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace OfflineMessageProto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::ResultCode* Arena::CreateMaybeMessage< ::OfflineMessageProto::ResultCode >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::ResultCode >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::msg* Arena::CreateMaybeMessage< ::OfflineMessageProto::msg >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::msg >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::addOfflineMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::addOfflineMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::delOfflineMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::delOfflineMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::queryOfflineMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::queryOfflineMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::groupMsg* Arena::CreateMaybeMessage< ::OfflineMessageProto::groupMsg >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::groupMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineGroupMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineGroupMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::addOfflineGroupMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineGroupMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineGroupMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::addOfflineGroupMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineGroupMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineGroupMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::delOfflineGroupMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineGroupMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineGroupMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::delOfflineGroupMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineGroupMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineGroupMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::queryOfflineGroupMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineGroupMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineGroupMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::queryOfflineGroupMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::departMsg* Arena::CreateMaybeMessage< ::OfflineMessageProto::departMsg >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::departMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineDepartMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineDepartMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::addOfflineDepartMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::addOfflineDepartMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::addOfflineDepartMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::addOfflineDepartMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineDepartMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineDepartMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::delOfflineDepartMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::delOfflineDepartMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::delOfflineDepartMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::delOfflineDepartMsgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineDepartMsgRequest* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineDepartMsgRequest >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::queryOfflineDepartMsgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::OfflineMessageProto::queryOfflineDepartMsgResponse* Arena::CreateMaybeMessage< ::OfflineMessageProto::queryOfflineDepartMsgResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OfflineMessageProto::queryOfflineDepartMsgResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
